{"version":3,"file":"d2dcc32e22db05f3b791707ecb9cf862d3c535f1-3af1fa6b5a05d810d583.js","mappings":"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","sources":["webpack://space-budz/./secrets.js","webpack://space-budz/./src/cardano/market/loader.js","webpack://space-budz/./src/cardano/market/utils.js","webpack://space-budz/./src/cardano/market/coinSelection.js","webpack://space-budz/./src/cardano/market/index.js","webpack://space-budz/./src/cardano/market/plutus.js","webpack://space-budz/./src/cardano/market/languageViews.js","webpack://space-budz/./src/templates/world-item.js","webpack://space-budz/./src/images/assets/show.svg"],"sourcesContent":["const PROJECT_ID=\"mainnet3eI2HGY9oDPZkQveItihr5lIP94sWWtF\"\r\n// const PROJECT_ID=\"testnetL0riA5tMipy3cQ45FjldsEdTSTuClr8V\"\r\n\r\nlet secrets = {\r\n    PROJECT_ID: PROJECT_ID\r\n}\r\n\r\nexport default secrets;\r\n","class Loader {\r\n  async load() {\r\n    if (this._wasm) return;\r\n    /**\r\n     * @private\r\n     */\r\n    this._wasm = await import(\r\n      \"./custom_modules/@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib\"\r\n    );\r\n  }\r\n\r\n  get Cardano() {\r\n    return this._wasm;\r\n  }\r\n}\r\n\r\nexport default new Loader();\r\n","import { Buffer } from \"buffer\";\r\nimport {\r\n  BigNum,\r\n  PlutusData,\r\n} from \"./custom_modules/@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib\";\r\nimport Loader from \"./loader.js\";\r\n\r\nexport const fromHex = (hex) => Buffer.from(hex, \"hex\");\r\nexport const toHex = (bytes) => Buffer.from(bytes).toString(\"hex\");\r\nexport const toBytesNum = (num) =>\r\n  num\r\n    .toString()\r\n    .split(\"\")\r\n    .map((d) => \"3\" + d)\r\n    .join(\"\");\r\nexport const fromAscii = (hex) => Buffer.from(hex).toString(\"hex\");\r\n\r\nexport const assetsToValue = (assets) => {\r\n  const multiAsset = Loader.Cardano.MultiAsset.new();\r\n  const lovelace = assets.find((asset) => asset.unit === \"lovelace\");\r\n  const policies = [\r\n    ...new Set(\r\n      assets\r\n        .filter((asset) => asset.unit !== \"lovelace\")\r\n        .map((asset) => asset.unit.slice(0, 56))\r\n    ),\r\n  ];\r\n  policies.forEach((policy) => {\r\n    const policyAssets = assets.filter(\r\n      (asset) => asset.unit.slice(0, 56) === policy\r\n    );\r\n    const assetsValue = Loader.Cardano.Assets.new();\r\n    policyAssets.forEach((asset) => {\r\n      assetsValue.insert(\r\n        Loader.Cardano.AssetName.new(Buffer.from(asset.unit.slice(56), \"hex\")),\r\n        Loader.Cardano.BigNum.from_str(asset.quantity)\r\n      );\r\n    });\r\n    multiAsset.insert(\r\n      Loader.Cardano.ScriptHash.from_bytes(Buffer.from(policy, \"hex\")),\r\n      assetsValue\r\n    );\r\n  });\r\n  const value = Loader.Cardano.Value.new(\r\n    Loader.Cardano.BigNum.from_str(lovelace ? lovelace.quantity : \"0\")\r\n  );\r\n  if (assets.length > 1 || !lovelace) value.set_multiasset(multiAsset);\r\n  return value;\r\n};\r\n\r\nexport const valueToAssets = (value) => {\r\n  const assets = [];\r\n  assets.push({ unit: \"lovelace\", quantity: value.coin().to_str() });\r\n  if (value.multiasset()) {\r\n    const multiAssets = value.multiasset().keys();\r\n    for (let j = 0; j < multiAssets.len(); j++) {\r\n      const policy = multiAssets.get(j);\r\n      const policyAssets = value.multiasset().get(policy);\r\n      const assetNames = policyAssets.keys();\r\n      for (let k = 0; k < assetNames.len(); k++) {\r\n        const policyAsset = assetNames.get(k);\r\n        const quantity = policyAssets.get(policyAsset);\r\n        const asset =\r\n          Buffer.from(policy.to_bytes(), \"hex\").toString(\"hex\") +\r\n          Buffer.from(policyAsset.name(), \"hex\").toString(\"hex\");\r\n        assets.push({\r\n          unit: asset,\r\n          quantity: quantity.to_str(),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return assets;\r\n};\r\n\r\n/**\r\n *\r\n * @param {PlutusData} datum\r\n */\r\nexport const getTradeDetails = (datum) => {\r\n  const tradeDetails = datum\r\n    .as_constr_plutus_data()\r\n    .data()\r\n    .get(0)\r\n    .as_constr_plutus_data()\r\n    .data();\r\n  return {\r\n    tradeOwner: Loader.Cardano.Ed25519KeyHash.from_bytes(\r\n      tradeDetails.get(0).as_bytes()\r\n    ),\r\n    budId: toHex(tradeDetails.get(1).as_bytes()),\r\n    requestedAmount: tradeDetails.get(2).as_integer().as_u64(),\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {BigNum} amount\r\n * @param {BigNum} p\r\n */\r\nexport const lovelacePercentage = (amount, p) => {\r\n  return amount\r\n    .checked_mul(Loader.Cardano.BigNum.from_str(\"10\"))\r\n    .checked_div(p);\r\n};\r\n","import {\r\n  TransactionUnspentOutput,\r\n  TransactionOutputs,\r\n  Value,\r\n} from \"./custom_modules/@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib\";\r\nimport Loader from \"./loader\";\r\nconst BigInt = typeof window !== \"undefined\" && window.BigInt;\r\n\r\n/**\r\n * BerryPool implementation of the __Random-Improve__ coin selection algorithm.\r\n *\r\n * = Overview\r\n *\r\n * The __Random-Improve__ coin selection algorithm works in __two phases__, by\r\n * /first/ selecting UTxO entries /at random/ to pay for each of the given\r\n * outputs, and /then/ attempting to /improve/ upon each of the selections.\r\n *\r\n * === Phase 1: Random Selection\r\n *\r\n * __In this phase, the algorithm randomly selects a minimal set of UTxO__\r\n * __entries to pay for each of the given outputs.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /descending order of coin value/.\r\n *\r\n *   *  maintains a /remaining UTxO set/, initially equal to the given\r\n *      /UTxO set/ parameter.\r\n *\r\n *   *  based on every output nature, generate a /native token UTxO subset/\r\n *      to narrow down to useful UTxO\r\n *\r\n *   *  maintains an /accumulated coin selection/, which is initially /empty/.\r\n *\r\n * For each output of value __/v/__, the algorithm /randomly/ selects entries\r\n * from the /remaining UTxO set/, until the total value of selected entries is\r\n * greater than or equal to __/v/__. The selected entries are then associated\r\n * with that output, and removed from the /remaining UTxO set/.\r\n *\r\n * This phase ends when every output has been associated with a selection of\r\n * UTxO entries.\r\n *\r\n * However, if the remaining UTxO set is completely exhausted before all\r\n * outputs can be processed, the algorithm terminates with an error.\r\n *\r\n * === Phase 2: Improvement\r\n *\r\n * __In this phase, the algorithm attempts to improve upon each of the UTxO__\r\n * __selections made in the previous phase, by conservatively expanding the__\r\n * __selection made for each output.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /ascending order of coin value/.\r\n *\r\n *   *  continues to maintain the /remaining UTxO set/ produced by the previous\r\n *      phase.\r\n *\r\n *   *  maintains an /accumulated coin selection/, initiated from previous phase.\r\n *\r\n * For each output of value __/v/__, the algorithm:\r\n *\r\n *  1.  __Calculates a /target range/__ for the total value of inputs used to\r\n *      pay for that output, defined by the triplet:\r\n *\r\n *      (/minimum/, /ideal/, /maximum/) = (/v/, /2v/, /3v/)\r\n *\r\n *  2.  __Attempts to /improve/ upon the /existing UTxO selection/__ for that\r\n *      output, by repeatedly selecting additional entries at random from the\r\n *      /remaining UTxO set/, stopping when the selection can be improved upon\r\n *      no further.\r\n *\r\n *      A selection with value /v1/ is considered to be an /improvement/ over a\r\n *      selection with value /v0/ if __all__ of the following conditions are\r\n *      satisfied:\r\n *\r\n *       * __Condition 1__: we have moved closer to the /ideal/ value:\r\n *\r\n *             abs (/ideal/ − /v1/) < abs (/ideal/ − /v0/)\r\n *\r\n *       * __Condition 2__: we have not exceeded the /maximum/ value:\r\n *\r\n *             /v1/ ≤ /maximum/\r\n *\r\n *       * __Condition 3__: when counting cumulatively across all outputs\r\n *       considered so far, we have not selected more than the /maximum/ number\r\n *       of UTxO entries specified by 'limit'.\r\n *\r\n *  3.  __Creates a /change value/__ for the output, equal to the total value\r\n *      of the /final UTxO selection/ for that output minus the value /v/ of\r\n *      that output.\r\n *\r\n *  4.  __Updates the /accumulated coin selection/__:\r\n *\r\n *       * Adds the /output/ to 'outputs'.\r\n *       * Adds the /improved UTxO selection/ to 'inputs'.\r\n *       * Adds the /change value/ to 'change'.\r\n *\r\n * This phase ends when every output has been processed, __or__ when the\r\n * /remaining UTxO set/ has been exhausted, whichever occurs sooner.\r\n *\r\n * = Termination\r\n *\r\n * When both phases are complete, the algorithm terminates.\r\n *\r\n * The /accumulated coin selection/ and /remaining UTxO set/ are returned to\r\n * the caller.\r\n *\r\n * === Failure Modes\r\n *\r\n * The algorithm terminates with an __error__ if:\r\n *\r\n *  1.  The /total value/ of the initial UTxO set (the amount of money\r\n *      /available/) is /less than/ the total value of the output list (the\r\n *      amount of money /required/).\r\n *\r\n *      See: __'InputsExhaustedError'__.\r\n *\r\n *  2.  The /number/ of UTxO entries needed to pay for the requested outputs\r\n *      would /exceed/ the upper limit specified by 'limit'.\r\n *\r\n *      See: __'InputLimitExceededError'__.\r\n *\r\n * == Motivating Principles\r\n *\r\n * There are several motivating principles behind the design of the algorithm.\r\n *\r\n * === Principle 1: Dust Management\r\n *\r\n * The probability that random selection will choose dust entries from a UTxO\r\n * set increases with the proportion of dust in the set.\r\n *\r\n * Therefore, for a UTxO set with a large amount of dust, there's a high\r\n * probability that a random subset will include a large amount of dust.\r\n *\r\n * === Principle 2: Change Management\r\n *\r\n * Ideally, coin selection algorithms should, over time, create a UTxO set that\r\n * has /useful/ outputs: outputs that will allow us to process future payments\r\n * with a minimum number of inputs.\r\n *\r\n * If for each payment request of value __/v/__ we create a change output of\r\n * /roughly/ the same value __/v/__, then we will end up with a distribution of\r\n * change values that matches the typical value distribution of payment\r\n * requests.\r\n *\r\n * === Principle 3: Performance Management\r\n *\r\n * Searching the UTxO set for additional entries to improve our change outputs\r\n * is /only/ useful if the UTxO set contains entries that are sufficiently\r\n * small enough. But it is precisely when the UTxO set contains many small\r\n * entries that it is less likely for a randomly-chosen UTxO entry to push the\r\n * total above the upper bound.\r\n */\r\n\r\n/**\r\n * @typedef {Value[]} AmountList - List of 'Value' object\r\n */\r\n\r\n/**\r\n * @typedef {TransactionUnspentOutput[]} UTxOList - List of UTxO\r\n */\r\n\r\n/**\r\n * @typedef {Object} UTxOSelection - Coin Selection algorithm core object\r\n * @property {UTxOList} selection - Accumulated UTxO set.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {UTxOList} subset - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImproveRange - ImproveRange\r\n * @property {Value} ideal - Requested amount * 2\r\n * @property {Value} maximum - Requested amount * 3\r\n */\r\n\r\n/**\r\n * @typedef {Object} SelectionResult - Coin Selection algorithm return\r\n * @property {UTxOList} input - Accumulated UTxO set.\r\n * @property {OutputList} output - Requested outputs.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n * @property {Value} change - Accumulated change amount.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ProtocolParameters\r\n * @property {int} minUTxO\r\n * @property {int} minFeeA\r\n * @property {int} minFeeB\r\n * @property {int} maxTxSize\r\n */\r\n\r\n/**\r\n * @type {ProtocolParameters}\r\n */\r\nlet protocolParameters = null;\r\n\r\n/**\r\n * CoinSelection Module.\r\n * @module src/lib/CoinSelection\r\n */\r\nconst CoinSelection = {\r\n  /**\r\n   * Set protocol parameters required by the algorithm\r\n   * @param {string} minUTxO\r\n   * @param {string} minFeeA\r\n   * @param {string} minFeeB\r\n   * @param {string} maxTxSize\r\n   */\r\n  setProtocolParameters: (minUTxO, minFeeA, minFeeB, maxTxSize) => {\r\n    protocolParameters = {\r\n      minUTxO: minUTxO,\r\n      minFeeA: minFeeA,\r\n      minFeeB: minFeeB,\r\n      maxTxSize: maxTxSize,\r\n    };\r\n  },\r\n  /**\r\n   * Random-Improve coin selection algorithm\r\n   * @param {UTxOList} inputs - The set of inputs available for selection.\r\n   * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n   * @param {int} limit - A limit on the number of inputs that can be selected.\r\n   * @param {UTxOList} [preset=[]]] - The pre-selection of inputs that will be added.\r\n   * @return {SelectionResult} - Coin Selection algorithm return\r\n   */\r\n  randomImprove: (inputs, outputs, limit, preset = []) => {\r\n    if (!protocolParameters)\r\n      throw new Error(\r\n        \"Protocol parameters not set. Use setProtocolParameters().\"\r\n      );\r\n\r\n    const _minUTxOValue =\r\n      BigInt(outputs.len()) * BigInt(protocolParameters.minUTxO);\r\n\r\n    let amount = Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str(\"0\"));\r\n\r\n    for (let i = 0; i < preset.length; i++) {\r\n      amount = addAmounts(preset[i].output().amount(), amount);\r\n    }\r\n\r\n    /** @type {UTxOSelection} */\r\n    let utxoSelection = {\r\n      selection: [...preset], // Shallow copy\r\n      remaining: [...inputs], // Shallow copy\r\n      subset: [],\r\n      amount: amount,\r\n    };\r\n\r\n    let mergedOutputsAmounts = mergeOutputsAmounts(outputs);\r\n\r\n    // Explode amount in an array of unique asset amount for comparison's sake\r\n    let splitOutputsAmounts = splitAmounts(mergedOutputsAmounts);\r\n\r\n    // Phase 1: Select enough input\r\n    for (let i = 0; i < splitOutputsAmounts.length; i++) {\r\n      createSubSet(utxoSelection, splitOutputsAmounts[i]); // Narrow down for NatToken UTxO\r\n\r\n      utxoSelection = select(\r\n        utxoSelection,\r\n        splitOutputsAmounts[i],\r\n        limit,\r\n        _minUTxOValue\r\n      );\r\n    }\r\n\r\n    // Phase 2: Improve\r\n    splitOutputsAmounts = sortAmountList(splitOutputsAmounts);\r\n\r\n    for (let i = 0; i < splitOutputsAmounts.length; i++) {\r\n      createSubSet(utxoSelection, splitOutputsAmounts[i]); // Narrow down for NatToken UTxO\r\n\r\n      let range = {};\r\n      range.ideal = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(splitOutputsAmounts[i])\r\n        .checked_add(splitOutputsAmounts[i]);\r\n      range.maximum = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(range.ideal)\r\n        .checked_add(splitOutputsAmounts[i]);\r\n\r\n      improve(\r\n        utxoSelection,\r\n        splitOutputsAmounts[i],\r\n        limit - utxoSelection.selection.length,\r\n        range\r\n      );\r\n    }\r\n\r\n    // Insure change hold enough Ada to cover included native assets and fees\r\n    if (utxoSelection.remaining.length > 0) {\r\n      const change = utxoSelection.amount.checked_sub(mergedOutputsAmounts);\r\n\r\n      let minAmount = Loader.Cardano.Value.new(\r\n        Loader.Cardano.min_ada_required(\r\n          change,\r\n          Loader.Cardano.BigNum.from_str(protocolParameters.minUTxO)\r\n        )\r\n      );\r\n\r\n      let maxFee =\r\n        BigInt(protocolParameters.minFeeA) *\r\n          BigInt(protocolParameters.maxTxSize) +\r\n        BigInt(protocolParameters.minFeeB);\r\n\r\n      maxFee = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(maxFee.toString())\r\n      );\r\n\r\n      minAmount = minAmount.checked_add(maxFee);\r\n\r\n      if (compare(change, minAmount) < 0) {\r\n        // Not enough, add missing amount and run select one last time\r\n        const minAda = minAmount\r\n          .checked_sub(Loader.Cardano.Value.new(change.coin()))\r\n          .checked_add(Loader.Cardano.Value.new(utxoSelection.amount.coin()));\r\n\r\n        createSubSet(utxoSelection, minAda);\r\n        utxoSelection = select(utxoSelection, minAda, limit, _minUTxOValue);\r\n      }\r\n    }\r\n\r\n    return {\r\n      input: utxoSelection.selection,\r\n      output: outputs,\r\n      remaining: utxoSelection.remaining,\r\n      amount: utxoSelection.amount,\r\n      change: utxoSelection.amount.checked_sub(mergedOutputsAmounts),\r\n    };\r\n  },\r\n};\r\n\r\n/**\r\n * Use randomSelect & descSelect algorithm to select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction select(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n  try {\r\n    utxoSelection = randomSelect(\r\n      cloneUTxOSelection(utxoSelection), // Deep copy in case of fallback needed\r\n      outputAmount,\r\n      limit - utxoSelection.selection.length,\r\n      minUTxOValue\r\n    );\r\n  } catch (e) {\r\n    if (e.message === \"INPUT_LIMIT_EXCEEDED\") {\r\n      // Limit reached : Fallback on DescOrdAlgo\r\n      utxoSelection = descSelect(\r\n        utxoSelection,\r\n        outputAmount,\r\n        limit - utxoSelection.selection.length,\r\n        minUTxOValue\r\n      );\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  return utxoSelection;\r\n}\r\n\r\n/**\r\n * Randomly select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction randomSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n  // If quantity is met, return subset into remaining list and exit\r\n  if (\r\n    isQtyFulfilled(outputAmount, utxoSelection.amount, minUTxOValue, nbFreeUTxO)\r\n  ) {\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n    return utxoSelection;\r\n  }\r\n\r\n  if (limit <= 0) {\r\n    throw new Error(\"INPUT_LIMIT_EXCEEDED\");\r\n  }\r\n\r\n  if (nbFreeUTxO <= 0) {\r\n    if (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n      throw new Error(\"MIN_UTXO_ERROR\");\r\n    }\r\n    throw new Error(\"INPUTS_EXHAUSTED\");\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  let utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  utxoSelection.selection.push(utxo);\r\n  utxoSelection.amount = addAmounts(\r\n    utxo.output().amount(),\r\n    utxoSelection.amount\r\n  );\r\n\r\n  return randomSelect(utxoSelection, outputAmount, limit - 1, minUTxOValue);\r\n}\r\n\r\n/**\r\n * Select enough UTxO in DESC order to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction descSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n  // Sort UTxO subset in DESC order for required Output unit type\r\n  utxoSelection.subset = utxoSelection.subset.sort((a, b) => {\r\n    return Number(\r\n      searchAmountValue(outputAmount, b.output().amount()) -\r\n        searchAmountValue(outputAmount, a.output().amount())\r\n    );\r\n  });\r\n\r\n  do {\r\n    if (limit <= 0) {\r\n      throw new Error(\"INPUT_LIMIT_EXCEEDED\");\r\n    }\r\n\r\n    if (utxoSelection.subset.length <= 0) {\r\n      if (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n        throw new Error(\"MIN_UTXO_ERROR\");\r\n      }\r\n      throw new Error(\"INPUTS_EXHAUSTED\");\r\n    }\r\n\r\n    /** @type {TransactionUnspentOutput} utxo */\r\n    let utxo = utxoSelection.subset.splice(0, 1).pop();\r\n\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n\r\n    limit--;\r\n  } while (\r\n    !isQtyFulfilled(\r\n      outputAmount,\r\n      utxoSelection.amount,\r\n      minUTxOValue,\r\n      utxoSelection.subset.length - 1\r\n    )\r\n  );\r\n\r\n  // Quantity is met, return subset into remaining list and return selection\r\n  utxoSelection.remaining = [\r\n    ...utxoSelection.remaining,\r\n    ...utxoSelection.subset,\r\n  ];\r\n  utxoSelection.subset = [];\r\n\r\n  return utxoSelection;\r\n}\r\n\r\n/**\r\n * Try to improve selection by increasing input amount in [2x,3x] range.\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {ImproveRange} range - Improvement range target values\r\n */\r\nfunction improve(utxoSelection, outputAmount, limit, range) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n\r\n  if (\r\n    compare(utxoSelection.amount, range.ideal) >= 0 ||\r\n    nbFreeUTxO <= 0 ||\r\n    limit <= 0\r\n  ) {\r\n    // Return subset in remaining\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n\r\n    return;\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  const utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  const newAmount = Loader.Cardano.Value.new(\r\n    Loader.Cardano.BigNum.from_str(\"0\")\r\n  )\r\n    .checked_add(utxo.output().amount())\r\n    .checked_add(outputAmount);\r\n\r\n  if (\r\n    abs(getAmountValue(range.ideal) - getAmountValue(newAmount)) <\r\n      abs(getAmountValue(range.ideal) - getAmountValue(outputAmount)) &&\r\n    compare(newAmount, range.maximum) <= 0\r\n  ) {\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n    limit--;\r\n  } else {\r\n    utxoSelection.remaining.push(utxo);\r\n  }\r\n\r\n  return improve(utxoSelection, outputAmount, limit, range);\r\n}\r\n\r\n/**\r\n * Compile all required outputs to a flat amounts list\r\n * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n * @return {Value} - The compiled set of amounts requested for payment.\r\n */\r\nfunction mergeOutputsAmounts(outputs) {\r\n  let compiledAmountList = Loader.Cardano.Value.new(\r\n    Loader.Cardano.BigNum.from_str(\"0\")\r\n  );\r\n\r\n  for (let i = 0; i < outputs.len(); i++) {\r\n    compiledAmountList = addAmounts(\r\n      outputs.get(i).amount(),\r\n      compiledAmountList\r\n    );\r\n  }\r\n\r\n  return compiledAmountList;\r\n}\r\n\r\n/**\r\n * Add up an Amounts List values to another Amounts List\r\n * @param {Value} amounts - Set of amounts to be added.\r\n * @param {Value} compiledAmounts - The compiled set of amounts.\r\n * @return {Value}\r\n */\r\nfunction addAmounts(amounts, compiledAmounts) {\r\n  return compiledAmounts.checked_add(amounts);\r\n}\r\n\r\n/**\r\n * Split amounts contained in a single {Value} object in separate {Value} objects\r\n * @param {Value} amounts - Set of amounts to be split.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {AmountList}\r\n */\r\nfunction splitAmounts(amounts) {\r\n  let splitAmounts = [];\r\n\r\n  if (amounts.multiasset()) {\r\n    let mA = amounts.multiasset();\r\n\r\n    for (let i = 0; i < mA.keys().len(); i++) {\r\n      let scriptHash = mA.keys().get(i);\r\n\r\n      for (let j = 0; j < mA.get(scriptHash).keys().len(); j++) {\r\n        let _assets = Loader.Cardano.Assets.new();\r\n        let assetName = mA.get(scriptHash).keys().get(j);\r\n\r\n        _assets.insert(\r\n          Loader.Cardano.AssetName.from_bytes(assetName.to_bytes()),\r\n          Loader.Cardano.BigNum.from_bytes(\r\n            mA.get(scriptHash).get(assetName).to_bytes()\r\n          )\r\n        );\r\n\r\n        let _multiasset = Loader.Cardano.MultiAsset.new();\r\n        _multiasset.insert(\r\n          Loader.Cardano.ScriptHash.from_bytes(scriptHash.to_bytes()),\r\n          _assets\r\n        );\r\n        let _value = Loader.Cardano.Value.new(\r\n          Loader.Cardano.BigNum.from_str(\"0\")\r\n        );\r\n        _value.set_multiasset(_multiasset);\r\n\r\n        splitAmounts.push(_value);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Order assets by qty DESC\r\n  splitAmounts = sortAmountList(splitAmounts, \"DESC\");\r\n\r\n  // Insure lovelace is last to account for min ada requirement\r\n  splitAmounts.push(\r\n    Loader.Cardano.Value.new(\r\n      Loader.Cardano.BigNum.from_bytes(amounts.coin().to_bytes())\r\n    )\r\n  );\r\n\r\n  return splitAmounts;\r\n}\r\n\r\n/**\r\n * Sort a mismatched AmountList ASC/DESC\r\n * @param {AmountList} amountList - Set of mismatched amounts to be sorted.\r\n * @param {string} [sortOrder=ASC] - Order\r\n * @return {AmountList} - The sorted AmountList\r\n */\r\nfunction sortAmountList(amountList, sortOrder = \"ASC\") {\r\n  return amountList.sort((a, b) => {\r\n    let sortInt = sortOrder === \"DESC\" ? BigInt(-1) : BigInt(1);\r\n    return Number((getAmountValue(a) - getAmountValue(b)) * sortInt);\r\n  });\r\n}\r\n\r\n/**\r\n * Return BigInt amount value\r\n * @param {Value} amount\r\n * @return {bigint}\r\n */\r\nfunction getAmountValue(amount) {\r\n  let val = BigInt(0);\r\n  let lovelace = BigInt(amount.coin().to_str());\r\n\r\n  if (lovelace > 0) {\r\n    val = lovelace;\r\n  } else if (amount.multiasset() && amount.multiasset().len() > 0) {\r\n    let scriptHash = amount.multiasset().keys().get(0);\r\n    let assetName = amount.multiasset().get(scriptHash).keys().get(0);\r\n    val = BigInt(amount.multiasset().get(scriptHash).get(assetName).to_str());\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n/**\r\n * Search & Return BigInt amount value\r\n * @param {Value} needle\r\n * @param {Value} haystack\r\n * @return {bigint}\r\n */\r\nfunction searchAmountValue(needle, haystack) {\r\n  let val = BigInt(0);\r\n  let lovelace = BigInt(needle.coin().to_str());\r\n\r\n  if (lovelace > 0) {\r\n    val = BigInt(haystack.coin().to_str());\r\n  } else if (\r\n    needle.multiasset() &&\r\n    haystack.multiasset() &&\r\n    needle.multiasset().len() > 0 &&\r\n    haystack.multiasset().len() > 0\r\n  ) {\r\n    let scriptHash = needle.multiasset().keys().get(0);\r\n    let assetName = needle.multiasset().get(scriptHash).keys().get(0);\r\n    val = BigInt(haystack.multiasset().get(scriptHash).get(assetName).to_str());\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n/**\r\n * Narrow down remaining UTxO set in case of native token, use full set for lovelace\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} output - Single compiled output qty requested for payment.\r\n */\r\nfunction createSubSet(utxoSelection, output) {\r\n  if (BigInt(output.coin().to_str()) < BigInt(1)) {\r\n    let subset = [];\r\n    let remaining = [];\r\n    for (let i = 0; i < utxoSelection.remaining.length; i++) {\r\n      if (\r\n        compare(utxoSelection.remaining[i].output().amount(), output) !==\r\n        undefined\r\n      ) {\r\n        subset.push(utxoSelection.remaining[i]);\r\n      } else {\r\n        remaining.push(utxoSelection.remaining[i]);\r\n      }\r\n    }\r\n    utxoSelection.subset = subset;\r\n    utxoSelection.remaining = remaining;\r\n  } else {\r\n    utxoSelection.subset = utxoSelection.remaining.splice(\r\n      0,\r\n      utxoSelection.remaining.length\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Is Quantity Fulfilled Condition - Handle 'minUTxOValue' protocol parameter.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {Value} cumulatedAmount - Single compiled accumulated UTxO qty.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @param {int} nbFreeUTxO - Number of free UTxO available.\r\n * @return {boolean}\r\n */\r\nfunction isQtyFulfilled(\r\n  outputAmount,\r\n  cumulatedAmount,\r\n  minUTxOValue,\r\n  nbFreeUTxO\r\n) {\r\n  let amount = outputAmount;\r\n\r\n  if (minUTxOValue && BigInt(outputAmount.coin().to_str()) > 0) {\r\n    let minAmount = Loader.Cardano.Value.new(\r\n      Loader.Cardano.min_ada_required(\r\n        cumulatedAmount,\r\n        Loader.Cardano.BigNum.from_str(minUTxOValue.toString())\r\n      )\r\n    );\r\n\r\n    // Lovelace min amount to cover assets and number of output need to be met\r\n    if (compare(cumulatedAmount, minAmount) < 0) return false;\r\n\r\n    // If requested Lovelace lower than minAmount, plan for change\r\n    if (compare(outputAmount, minAmount) < 0) {\r\n      amount = minAmount.checked_add(\r\n        Loader.Cardano.Value.new(\r\n          Loader.Cardano.BigNum.from_str(protocolParameters.minUTxO)\r\n        )\r\n      );\r\n    }\r\n\r\n    // Try covering the max fees\r\n    if (nbFreeUTxO > 0) {\r\n      let maxFee =\r\n        BigInt(protocolParameters.minFeeA) *\r\n          BigInt(protocolParameters.maxTxSize) +\r\n        BigInt(protocolParameters.minFeeB);\r\n\r\n      maxFee = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(maxFee.toString())\r\n      );\r\n\r\n      amount = amount.checked_add(maxFee);\r\n    }\r\n  }\r\n\r\n  return compare(cumulatedAmount, amount) >= 0;\r\n}\r\n\r\n/**\r\n * Return a deep copy of UTxOSelection\r\n * @param {UTxOSelection} utxoSelection\r\n * @return {UTxOSelection} Clone - Deep copy\r\n */\r\nfunction cloneUTxOSelection(utxoSelection) {\r\n  return {\r\n    selection: cloneUTxOList(utxoSelection.selection),\r\n    remaining: cloneUTxOList(utxoSelection.remaining),\r\n    subset: cloneUTxOList(utxoSelection.subset),\r\n    amount: cloneValue(utxoSelection.amount),\r\n  };\r\n}\r\n\r\n/**\r\n * Return a deep copy of an UTxO List\r\n * @param {UTxOList} utxoList\r\n * @return {UTxOList} Cone - Deep copy\r\n */\r\nconst cloneUTxOList = (utxoList) =>\r\n  utxoList.map((utxo) =>\r\n    Loader.Cardano.TransactionUnspentOutput.from_bytes(utxo.to_bytes())\r\n  );\r\n\r\n/**\r\n * Return a deep copy of a Value object\r\n * @param {Value} value\r\n * @return {Value} Cone - Deep copy\r\n */\r\nconst cloneValue = (value) => Loader.Cardano.Value.from_bytes(value.to_bytes());\r\n\r\n// Helper\r\nfunction abs(big) {\r\n  return big < 0 ? big * BigInt(-1) : big;\r\n}\r\n\r\n/**\r\n * Compare a candidate value to the one in a group if present\r\n * @param {Value} group\r\n * @param {Value} candidate\r\n * @return {int} - -1 group lower, 0 equal, 1 group higher, undefined if no match\r\n */\r\nfunction compare(group, candidate) {\r\n  let gQty = BigInt(group.coin().to_str());\r\n  let cQty = BigInt(candidate.coin().to_str());\r\n\r\n  if (candidate.multiasset()) {\r\n    let cScriptHash = candidate.multiasset().keys().get(0);\r\n    let cAssetName = candidate.multiasset().get(cScriptHash).keys().get(0);\r\n\r\n    if (group.multiasset() && group.multiasset().len()) {\r\n      if (\r\n        group.multiasset().get(cScriptHash) &&\r\n        group.multiasset().get(cScriptHash).get(cAssetName)\r\n      ) {\r\n        gQty = BigInt(\r\n          group.multiasset().get(cScriptHash).get(cAssetName).to_str()\r\n        );\r\n        cQty = BigInt(\r\n          candidate.multiasset().get(cScriptHash).get(cAssetName).to_str()\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  return gQty >= cQty ? (gQty === cQty ? 0 : 1) : -1;\r\n}\r\n\r\nexport default CoinSelection;\r\n","import Loader from \"./loader.js\";\r\nimport {\r\n  assetsToValue,\r\n  fromAscii,\r\n  fromHex,\r\n  getTradeDetails,\r\n  lovelacePercentage,\r\n  toBytesNum,\r\n  toHex,\r\n  valueToAssets,\r\n} from \"./utils.js\";\r\nimport { languageViews } from \"./languageViews.js\";\r\nimport { contract } from \"./plutus.js\";\r\nimport CoinSelection from \"./coinSelection.js\";\r\nimport {\r\n  Address,\r\n  PlutusData,\r\n  TransactionUnspentOutput,\r\n} from \"./custom_modules/@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib.js\";\r\n\r\nconst DATUM_LABEL = 405;\r\nconst ADDRESS_LABEL = 406;\r\n\r\n// Validator\r\nconst CONTRACT = () => {\r\n  const scripts = Loader.Cardano.PlutusScripts.new();\r\n  scripts.add(Loader.Cardano.PlutusScript.new(fromHex(contract)));\r\n  return scripts;\r\n};\r\n\r\nconst CONTRACT_ADDRESS = () =>\r\n  Loader.Cardano.Address.from_bech32(\r\n    //\"addr1wyvvtqlx34nu8xkpe86dcznlj9kwgpy97x0zpgqnr782hvcyjjcdh\"\r\n    \"addr1zyvvtqlx34nu8xkpe86dcznlj9kwgpy97x0zpgqnr782hvlassd377xwhjrwyuqtxsces0ksaev6s7pllvd7hrpfn98q35a5tz\"\r\n  );\r\n\r\n// Datums\r\nconst START_BID = () => {\r\n  const datum = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(DATUM_TYPE.StartBid),\r\n      Loader.Cardano.PlutusList.new()\r\n    )\r\n  );\r\n  return datum;\r\n};\r\nconst BID = ({ tradeOwner, budId }) => {\r\n  const fieldsInner = Loader.Cardano.PlutusList.new();\r\n  fieldsInner.add(Loader.Cardano.PlutusData.new_bytes(fromHex(tradeOwner)));\r\n  fieldsInner.add(\r\n    Loader.Cardano.PlutusData.new_bytes(fromHex(toBytesNum(budId)))\r\n  );\r\n  fieldsInner.add(\r\n    Loader.Cardano.PlutusData.new_integer(Loader.Cardano.BigInt.from_str(\"1\"))\r\n  );\r\n  const tradeDetails = Loader.Cardano.PlutusList.new();\r\n  tradeDetails.add(\r\n    Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n      Loader.Cardano.ConstrPlutusData.new(\r\n        Loader.Cardano.Int.new_i32(0),\r\n        fieldsInner\r\n      )\r\n    )\r\n  );\r\n  const datum = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(DATUM_TYPE.Bid),\r\n      tradeDetails\r\n    )\r\n  );\r\n  return datum;\r\n};\r\nconst OFFER = ({ tradeOwner, budId, requestedAmount }) => {\r\n  const fieldsInner = Loader.Cardano.PlutusList.new();\r\n  fieldsInner.add(Loader.Cardano.PlutusData.new_bytes(fromHex(tradeOwner)));\r\n  fieldsInner.add(\r\n    Loader.Cardano.PlutusData.new_bytes(fromHex(toBytesNum(budId)))\r\n  );\r\n  fieldsInner.add(\r\n    Loader.Cardano.PlutusData.new_integer(\r\n      Loader.Cardano.BigInt.from_str(requestedAmount)\r\n    )\r\n  );\r\n  const tradeDetails = Loader.Cardano.PlutusList.new();\r\n  tradeDetails.add(\r\n    Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n      Loader.Cardano.ConstrPlutusData.new(\r\n        Loader.Cardano.Int.new_i32(0),\r\n        fieldsInner\r\n      )\r\n    )\r\n  );\r\n  const datum = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(DATUM_TYPE.Offer),\r\n      tradeDetails\r\n    )\r\n  );\r\n  return datum;\r\n};\r\n\r\nconst DATUM_TYPE = {\r\n  StartBid: 0,\r\n  Bid: 1,\r\n  Offer: 2,\r\n};\r\n\r\n// Redeemers\r\nconst BUY = (index) => {\r\n  const redeemerData = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(0),\r\n      Loader.Cardano.PlutusList.new()\r\n    )\r\n  );\r\n  const redeemer = Loader.Cardano.Redeemer.new(\r\n    Loader.Cardano.RedeemerTag.new_spend(),\r\n    Loader.Cardano.BigNum.from_str(index),\r\n    redeemerData,\r\n    Loader.Cardano.ExUnits.new(\r\n      Loader.Cardano.BigNum.from_str(\"7000000\"),\r\n      Loader.Cardano.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n  return redeemer;\r\n};\r\nconst SELL = (index) => {\r\n  const redeemerData = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(1),\r\n      Loader.Cardano.PlutusList.new()\r\n    )\r\n  );\r\n  const redeemer = Loader.Cardano.Redeemer.new(\r\n    Loader.Cardano.RedeemerTag.new_spend(),\r\n    Loader.Cardano.BigNum.from_str(index),\r\n    redeemerData,\r\n    Loader.Cardano.ExUnits.new(\r\n      Loader.Cardano.BigNum.from_str(\"7000000\"),\r\n      Loader.Cardano.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n  return redeemer;\r\n};\r\nconst BID_HIGHER = (index) => {\r\n  const redeemerData = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(2),\r\n      Loader.Cardano.PlutusList.new()\r\n    )\r\n  );\r\n  const redeemer = Loader.Cardano.Redeemer.new(\r\n    Loader.Cardano.RedeemerTag.new_spend(),\r\n    Loader.Cardano.BigNum.from_str(index),\r\n    redeemerData,\r\n    Loader.Cardano.ExUnits.new(\r\n      Loader.Cardano.BigNum.from_str(\"7000000\"),\r\n      Loader.Cardano.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n  return redeemer;\r\n};\r\nconst CANCEL = (index) => {\r\n  const redeemerData = Loader.Cardano.PlutusData.new_constr_plutus_data(\r\n    Loader.Cardano.ConstrPlutusData.new(\r\n      Loader.Cardano.Int.new_i32(3),\r\n      Loader.Cardano.PlutusList.new()\r\n    )\r\n  );\r\n  const redeemer = Loader.Cardano.Redeemer.new(\r\n    Loader.Cardano.RedeemerTag.new_spend(),\r\n    Loader.Cardano.BigNum.from_str(index),\r\n    redeemerData,\r\n    Loader.Cardano.ExUnits.new(\r\n      Loader.Cardano.BigNum.from_str(\"5000000\"),\r\n      Loader.Cardano.BigNum.from_str(\"2000000000\")\r\n    )\r\n  );\r\n  return redeemer;\r\n};\r\n\r\nconst toFraction = (p) => Math.floor(1 / (p / 1000));\r\n\r\nclass SpaceBudzMarket {\r\n  constructor({ base, projectId }, extraFeeRecipient) {\r\n    this.provider = { base, projectId };\r\n    this.extraFeeRecipient = extraFeeRecipient;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @typedef {Object} TradeUtxo\r\n   * @property {PlutusData} datum\r\n   * @property {Address} tradeOwnerAddress\r\n   * @property {TransactionUnspentOutput} utxo\r\n   * @property {string} budId\r\n   * @property {string} lovelace bid amount or requested amount from offer\r\n   */\r\n\r\n  /**\r\n   *@private\r\n   */\r\n  async blockfrostRequest(endpoint, headers, body) {\r\n    return await fetch(this.provider.base + endpoint, {\r\n      headers: {\r\n        project_id: this.provider.projectId,\r\n        ...headers,\r\n        \"User-Agent\": \"spacebudz-marketplace\",\r\n      },\r\n      method: body ? \"POST\" : \"GET\",\r\n      body,\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {TradeUtxo[]}\r\n   */\r\n  async getUtxo(policy, prefix, budId) {\r\n    const asset = policy + fromAscii(prefix + budId);\r\n\r\n    const utxos = await this.blockfrostRequest( // TODO - We need to make sure that this is going to work for us. Do we just want to use blockfrost? No.\r\n      `/addresses/${CONTRACT_ADDRESS().to_bech32()}/utxos/${asset}`\r\n    );\r\n    console.log(JSON.stringify(utxos));\r\n\r\n    return await Promise.all(\r\n      utxos.map(async (utxo) => {\r\n        const metadata = await this.blockfrostRequest(\r\n          `/txs/${utxo.tx_hash}/metadata`\r\n        );\r\n        let datum;\r\n        let tradeOwnerAddress;\r\n        try {\r\n          console.log(`Expect: ${toHex(START_BID().to_bytes())}`)\r\n          datum = metadata\r\n            .find((m) => m.label == DATUM_LABEL)\r\n            .json_metadata[utxo.output_index].slice(2);\r\n          if (datum != toHex(START_BID().to_bytes()))\r\n            //STARTBID doesn't have a tradeOwner\r\n            tradeOwnerAddress = metadata\r\n              .find((m) => m.label == ADDRESS_LABEL)\r\n              .json_metadata.address.slice(2);\r\n        } catch (e) {\r\n          // throw new Error(\"Some required metadata entries were not found\");\r\n          console.log(\"Some required metadata entries were not found.\")\r\n          datum = toHex(START_BID().to_bytes());\r\n        }\r\n        datum = Loader.Cardano.PlutusData.from_bytes(fromHex(datum));\r\n        console.log(utxo.data_hash);\r\n        console.log(toHex(Loader.Cardano.hash_plutus_data(datum).to_bytes()));\r\n        if (\r\n          toHex(Loader.Cardano.hash_plutus_data(datum).to_bytes()) !==\r\n          utxo.data_hash\r\n        )\r\n          throw new Error(\"Datum hash doesn't match\");\r\n\r\n        return {\r\n          datum,\r\n          tradeOwnerAddress:\r\n            tradeOwnerAddress &&\r\n            Loader.Cardano.Address.from_bytes(fromHex(tradeOwnerAddress)),\r\n          utxo: Loader.Cardano.TransactionUnspentOutput.new(\r\n            Loader.Cardano.TransactionInput.new(\r\n              Loader.Cardano.TransactionHash.from_bytes(fromHex(utxo.tx_hash)),\r\n              utxo.output_index\r\n            ),\r\n            Loader.Cardano.TransactionOutput.new(\r\n              CONTRACT_ADDRESS(),\r\n              assetsToValue(utxo.amount)\r\n            )\r\n          ),\r\n          budId,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   *@private\r\n   */\r\n  async initTx() {\r\n    const txBuilder = Loader.Cardano.TransactionBuilder.new(\r\n      Loader.Cardano.LinearFee.new(\r\n        Loader.Cardano.BigNum.from_str(\r\n          this.protocolParameters.linearFee.minFeeA\r\n        ),\r\n        Loader.Cardano.BigNum.from_str(\r\n          this.protocolParameters.linearFee.minFeeB\r\n        )\r\n      ),\r\n      Loader.Cardano.BigNum.from_str(this.protocolParameters.minUtxo),\r\n      Loader.Cardano.BigNum.from_str(this.protocolParameters.poolDeposit),\r\n      Loader.Cardano.BigNum.from_str(this.protocolParameters.keyDeposit),\r\n      this.protocolParameters.maxValSize,\r\n      this.protocolParameters.maxTxSize,\r\n      this.protocolParameters.priceMem,\r\n      this.protocolParameters.priceStep,\r\n      Loader.Cardano.LanguageViews.new(Buffer.from(languageViews, \"hex\"))\r\n    );\r\n    const datums = Loader.Cardano.PlutusList.new();\r\n    const metadata = { [DATUM_LABEL]: {}, [ADDRESS_LABEL]: {} };\r\n    const outputs = Loader.Cardano.TransactionOutputs.new();\r\n    return { txBuilder, datums, metadata, outputs };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  policyBidLength(value) {\r\n    if (!value.multiasset()) return 0;\r\n    const policy = Loader.Cardano.ScriptHash.from_bytes(\r\n      Loader.Cardano.Ed25519KeyHash.from_bytes(\r\n        fromHex(this.contractInfo.policyBid)\r\n      ).to_bytes()\r\n    );\r\n    return value.multiasset().get(policy).len();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  policyBidRemaining(value, budId) {\r\n    const assets = valueToAssets(value);\r\n    return assetsToValue(\r\n      assets.filter(\r\n        (asset) =>\r\n          asset.unit !=\r\n            this.contractInfo.policyBid +\r\n              fromAscii(this.contractInfo.prefixSpaceBudBid + budId) &&\r\n          asset.unit.startsWith(this.contractInfo.policyBid)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  createOutput(\r\n    address,\r\n    value,\r\n    { datum, index, tradeOwnerAddress, metadata } = {}\r\n  ) {\r\n    const v = value;\r\n    const minAda = Loader.Cardano.min_ada_required(\r\n      v,\r\n      Loader.Cardano.BigNum.from_str(this.protocolParameters.minUtxo),\r\n      datum && Loader.Cardano.hash_plutus_data(datum)\r\n    );\r\n    if (minAda.compare(v.coin()) == 1) v.set_coin(minAda);\r\n    const output = Loader.Cardano.TransactionOutput.new(address, v);\r\n    if (datum) {\r\n      output.set_data_hash(Loader.Cardano.hash_plutus_data(datum));\r\n      metadata[DATUM_LABEL][index] = \"0x\" + toHex(datum.to_bytes());\r\n    }\r\n    if (tradeOwnerAddress) {\r\n      metadata[ADDRESS_LABEL].address =\r\n        \"0x\" + toHex(tradeOwnerAddress.to_address().to_bytes());\r\n    }\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setCollateral(txBuilder, utxos) {\r\n    const inputs = Loader.Cardano.TransactionInputs.new();\r\n    utxos.forEach((utxo) => {\r\n      inputs.add(utxo.input());\r\n      txBuilder.add_address_witness(utxo.output().address());\r\n    });\r\n    txBuilder.set_collateral(inputs);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  async finalizeTx({\r\n    txBuilder,\r\n    changeAddress,\r\n    utxos,\r\n    outputs,\r\n    datums,\r\n    metadata,\r\n    scriptUtxo,\r\n    action,\r\n  }) {\r\n    const transactionWitnessSet = Loader.Cardano.TransactionWitnessSet.new();\r\n    let { input, change } = CoinSelection.randomImprove(\r\n      utxos,\r\n      outputs,\r\n      8,\r\n      scriptUtxo ? [scriptUtxo] : []\r\n    );\r\n    input.forEach((utxo) => {\r\n      txBuilder.add_input(\r\n        utxo.output().address(),\r\n        utxo.input(),\r\n        utxo.output().amount()\r\n      );\r\n    });\r\n    for (let i = 0; i < outputs.len(); i++) {\r\n      txBuilder.add_output(outputs.get(i));\r\n    }\r\n    if (scriptUtxo) {\r\n      const redeemers = Loader.Cardano.Redeemers.new();\r\n      const redeemerIndex = txBuilder\r\n        .index_of_input(scriptUtxo.input())\r\n        .toString();\r\n      redeemers.add(action(redeemerIndex));\r\n      txBuilder.set_redeemers(\r\n        Loader.Cardano.Redeemers.from_bytes(redeemers.to_bytes())\r\n      );\r\n      txBuilder.set_plutus_data(\r\n        Loader.Cardano.PlutusList.from_bytes(datums.to_bytes())\r\n      );\r\n      txBuilder.set_plutus_scripts(CONTRACT());\r\n      const collateral = (\r\n        await window.cardano.selectedWallet.experimental.getCollateral()\r\n      ).map((utxo) =>\r\n        Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n      );\r\n      if (collateral.length <= 0) throw new Error(\"NO_COLLATERAL\");\r\n      this.setCollateral(txBuilder, collateral);\r\n\r\n      transactionWitnessSet.set_plutus_scripts(CONTRACT());\r\n      transactionWitnessSet.set_plutus_data(datums);\r\n      transactionWitnessSet.set_redeemers(redeemers);\r\n    }\r\n    let aux_data;\r\n    if (metadata) {\r\n      aux_data = Loader.Cardano.AuxiliaryData.new();\r\n      const generalMetadata = Loader.Cardano.GeneralTransactionMetadata.new();\r\n      Object.keys(metadata).forEach((label) => {\r\n        Object.keys(metadata[label]).length > 0 &&\r\n          generalMetadata.insert(\r\n            Loader.Cardano.BigNum.from_str(label),\r\n            Loader.Cardano.encode_json_str_to_metadatum(\r\n              JSON.stringify(metadata[label]),\r\n              1\r\n            )\r\n          );\r\n      });\r\n      aux_data.set_metadata(generalMetadata);\r\n      txBuilder.set_auxiliary_data(aux_data);\r\n    }\r\n\r\n    const changeMultiAssets = change.multiasset();\r\n\r\n    // check if change value is too big for single output\r\n    if (\r\n      changeMultiAssets &&\r\n      change.to_bytes().length * 2 > this.protocolParameters.maxValSize\r\n    ) {\r\n      const partialChange = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(\"0\")\r\n      );\r\n\r\n      const partialMultiAssets = Loader.Cardano.MultiAsset.new();\r\n      const policies = changeMultiAssets.keys();\r\n      const makeSplit = () => {\r\n        for (let j = 0; j < changeMultiAssets.len(); j++) {\r\n          const policy = policies.get(j);\r\n          const policyAssets = changeMultiAssets.get(policy);\r\n          const assetNames = policyAssets.keys();\r\n          const assets = Loader.Cardano.Assets.new();\r\n          for (let k = 0; k < assetNames.len(); k++) {\r\n            const policyAsset = assetNames.get(k);\r\n            const quantity = policyAssets.get(policyAsset);\r\n            assets.insert(policyAsset, quantity);\r\n            //check size\r\n            const checkMultiAssets = Loader.Cardano.MultiAsset.from_bytes(\r\n              partialMultiAssets.to_bytes()\r\n            );\r\n            checkMultiAssets.insert(policy, assets);\r\n            const checkValue = Loader.Cardano.Value.new(\r\n              Loader.Cardano.BigNum.from_str(\"0\")\r\n            );\r\n            checkValue.set_multiasset(checkMultiAssets);\r\n            if (\r\n              checkValue.to_bytes().length * 2 >=\r\n              this.protocolParameters.maxValSize\r\n            ) {\r\n              partialMultiAssets.insert(policy, assets);\r\n              return;\r\n            }\r\n          }\r\n          partialMultiAssets.insert(policy, assets);\r\n        }\r\n      };\r\n      makeSplit();\r\n      partialChange.set_multiasset(partialMultiAssets);\r\n      const minAda = Loader.Cardano.min_ada_required(\r\n        partialChange,\r\n        Loader.Cardano.BigNum.from_str(this.protocolParameters.minUtxo)\r\n      );\r\n      partialChange.set_coin(minAda);\r\n\r\n      txBuilder.add_output(\r\n        Loader.Cardano.TransactionOutput.new(\r\n          changeAddress.to_address(),\r\n          partialChange\r\n        )\r\n      );\r\n    }\r\n\r\n    txBuilder.add_change_if_needed(changeAddress.to_address());\r\n    const txBody = txBuilder.build();\r\n    const tx = Loader.Cardano.Transaction.new(\r\n      txBody,\r\n      Loader.Cardano.TransactionWitnessSet.from_bytes(\r\n        transactionWitnessSet.to_bytes()\r\n      ),\r\n      aux_data\r\n    );\r\n    const size = tx.to_bytes().length * 2;\r\n    console.log(size);\r\n    if (size > this.protocolParameters.maxTxSize)\r\n      throw new Error(\"MAX_SIZE_REACHED\");\r\n    let txVkeyWitnesses = await window.cardano.selectedWallet.signTx(\r\n      toHex(tx.to_bytes()),\r\n      true\r\n    );\r\n    txVkeyWitnesses = Loader.Cardano.TransactionWitnessSet.from_bytes(\r\n      fromHex(txVkeyWitnesses)\r\n    );\r\n    transactionWitnessSet.set_vkeys(txVkeyWitnesses.vkeys());\r\n    const signedTx = Loader.Cardano.Transaction.new(\r\n      tx.body(),\r\n      transactionWitnessSet,\r\n      tx.auxiliary_data()\r\n    );\r\n\r\n    console.log(\"Full Tx Size\", signedTx.to_bytes().length);\r\n\r\n    const txHash = await window.cardano.selectedWallet.submitTx(\r\n      toHex(signedTx.to_bytes())\r\n    );\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  splitAmount(lovelaceAmount, address, outputs) {\r\n    if (\r\n      lovelaceAmount.compare(Loader.Cardano.BigNum.from_str(\"400000000\")) ==\r\n        1 ||\r\n      lovelaceAmount.compare(Loader.Cardano.BigNum.from_str(\"400000000\")) == 0\r\n    ) {\r\n      const [amount1, amount2, amount3] = [\r\n        lovelacePercentage(lovelaceAmount, this.contractInfo.owner1.fee2),\r\n        lovelacePercentage(lovelaceAmount, this.contractInfo.owner2.fee),\r\n        lovelacePercentage(lovelaceAmount, this.contractInfo.extraFee),\r\n      ];\r\n      if (\r\n        this.extraFeeRecipient.to_bech32() ==\r\n        this.contractInfo.owner1.address.to_bech32() // if owner is same as fee recipient, no reason to split up utxo extra\r\n      ) {\r\n        outputs.add(\r\n          this.createOutput(\r\n            this.contractInfo.owner1.address,\r\n            Loader.Cardano.Value.new(amount1.checked_add(amount3))\r\n          )\r\n        );\r\n      } else {\r\n        outputs.add(\r\n          this.createOutput(\r\n            this.contractInfo.owner1.address,\r\n            Loader.Cardano.Value.new(amount1)\r\n          )\r\n        );\r\n        outputs.add(\r\n          this.createOutput(\r\n            this.extraFeeRecipient,\r\n            Loader.Cardano.Value.new(amount3)\r\n          )\r\n        );\r\n      }\r\n\r\n      outputs.add(\r\n        this.createOutput(\r\n          this.contractInfo.owner2.address,\r\n          Loader.Cardano.Value.new(amount2)\r\n        )\r\n      );\r\n\r\n      outputs.add(\r\n        this.createOutput(\r\n          address,\r\n          Loader.Cardano.Value.new(\r\n            lovelaceAmount\r\n              .checked_sub(amount1)\r\n              .checked_sub(amount2)\r\n              .checked_sub(amount3)\r\n          )\r\n        )\r\n      );\r\n    } else {\r\n      const amount1 = lovelacePercentage(\r\n        lovelaceAmount,\r\n        this.contractInfo.owner1.fee1\r\n      );\r\n      outputs.add(\r\n        this.createOutput(\r\n          this.contractInfo.owner1.address,\r\n          Loader.Cardano.Value.new(amount1)\r\n        )\r\n      );\r\n      outputs.add(\r\n        this.createOutput(\r\n          address,\r\n          Loader.Cardano.Value.new(lovelaceAmount.checked_sub(amount1))\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  async load() {\r\n    await Loader.load();\r\n    const p = await this.blockfrostRequest(`/epochs/latest/parameters`); // TODO - We have this on the other one.\r\n    console.log(JSON.stringify(p));\r\n    this.protocolParameters = {\r\n      linearFee: {\r\n        minFeeA: p.min_fee_a.toString(),\r\n        minFeeB: p.min_fee_b.toString(),\r\n      },\r\n      minUtxo: \"1000000\",\r\n      poolDeposit: p.pool_deposit,\r\n      keyDeposit: p.key_deposit,\r\n      maxValSize: parseInt(p.max_val_size),\r\n      maxTxSize: parseInt(p.max_tx_size),\r\n      priceMem: parseFloat(p.price_mem),\r\n      priceStep: parseFloat(p.price_step),\r\n    };\r\n    //TODO: wait for blockfrost fix\r\n    // this.protocolParameters = {\r\n    //   linearFee: {\r\n    //     minFeeA: p.min_fee_a.toString(),\r\n    //     minFeeB: p.min_fee_b.toString(),\r\n    //   },\r\n    //   minUtxo: \"1000000\",\r\n    //   poolDeposit: \"500000000\",\r\n    //   keyDeposit: \"2000000\",\r\n    //   maxValSize: \"5000\",\r\n    //   maxTxSize: 16384,\r\n    //   priceMem: 5.77e-2,\r\n    //   priceStep: 7.21e-5,\r\n    // };\r\n\r\n    this.contractInfo = {\r\n      policySpaceBudz: // TODO - Replace the policy ids below.\r\n        \"3c2cfd4f1ad33678039cfd0347cca8df363c710067d739624218abc0\",\r\n      policyBid: \"314f6e0535275e1ba9335c722364865fe5503a8aa6a0f9ad640c6c94\",\r\n      prefixSpaceBud: \"WorldsWithin\",\r\n      prefixSpaceBudBid: \"WorldsWithinBid\",\r\n      owner1: {\r\n        address: Loader.Cardano.Address.from_bech32(\r\n          \"addr1q9pgdsg5ds5r7dldfny020wu5ck2e9xch7z97ufcakayfmctzv5tnwx36p2kl0dlkk5kft9z55e9k5dmpqvk9xluupdsz3s9xl\"\r\n        ),\r\n        fee1: Loader.Cardano.BigNum.from_str(\"416\"), // 2.4%\r\n        fee2: Loader.Cardano.BigNum.from_str(\"625\"), // 1.6%\r\n      },\r\n      owner2: {\r\n        address: Loader.Cardano.Address.from_bech32(\r\n          \"addr1q9pgdsg5ds5r7dldfny020wu5ck2e9xch7z97ufcakayfmctzv5tnwx36p2kl0dlkk5kft9z55e9k5dmpqvk9xluupdsz3s9xl\"\r\n        ),\r\n        fee: Loader.Cardano.BigNum.from_str(\"2500\"), // 0.4%\r\n      },\r\n      extraFee: Loader.Cardano.BigNum.from_str(\"2500\"), // 0.4%\r\n      minPrice: Loader.Cardano.BigNum.from_str(\"20000000\"),\r\n      bidStep: Loader.Cardano.BigNum.from_str(\"10000\"),\r\n    };\r\n    this.extraFeeRecipient = Loader.Cardano.Address.from_bech32(\r\n      \"addr1q9pgdsg5ds5r7dldfny020wu5ck2e9xch7z97ufcakayfmctzv5tnwx36p2kl0dlkk5kft9z55e9k5dmpqvk9xluupdsz3s9xl\"\r\n    );\r\n\r\n    CoinSelection.setProtocolParameters(\r\n      this.protocolParameters.minUtxo,\r\n      this.protocolParameters.linearFee.minFeeA,\r\n      this.protocolParameters.linearFee.minFeeB,\r\n      this.protocolParameters.maxTxSize.toString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} budId\r\n   * @returns {TradeUtxo | TradeUtxo[] | undefined} Array if both twins are offered\r\n   */\r\n  async getOffer(budId) {\r\n    const offerUtxo = await this.getUtxo(\r\n      this.contractInfo.policySpaceBudz,\r\n      this.contractInfo.prefixSpaceBud,\r\n      budId.toString().padStart(5, \"0\")\r\n    );\r\n    if (offerUtxo.length === 1) {\r\n      const lovelace = getTradeDetails(offerUtxo[0].datum).requestedAmount;\r\n      if (lovelace.compare(this.contractInfo.minPrice) == -1) return null;\r\n      return { ...offerUtxo[0], lovelace: lovelace.to_str() };\r\n    }\r\n    if (offerUtxo.length === 2 && (budId == 1903 || budId == 6413)) {\r\n      const utxos = offerUtxo\r\n        .map((utxo) => {\r\n          const lovelace = getTradeDetails(utxo.datum).requestedAmount;\r\n          if (lovelace.compare(this.contractInfo.minPrice) == -1) return null;\r\n          return { ...utxo, lovelace: lovelace.to_str() };\r\n        })\r\n        .filter((utxo) => utxo != null);\r\n      // if both twins are offered, but one < minPrice filter it out and do not return an array\r\n      // if both are < minPrice return null\r\n      if (utxos.length <= 0) return null;\r\n      if (utxos.length < 2) return utxos[0];\r\n      return utxos;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async getAddress() {\r\n    try {\r\n      return Loader.Cardano.BaseAddress.from_address(\r\n        Loader.Cardano.Address.from_bytes(\r\n          fromHex((await window.cardano.selectedWallet.getUsedAddresses())[0])\r\n        )\r\n      );\r\n    } catch (e) {}\r\n    try {\r\n      return Loader.Cardano.EnterpriseAddress.from_address(\r\n        Loader.Cardano.Address.from_bytes(\r\n          fromHex((await window.cardano.selectedWallet.getUsedAddresses())[0])\r\n        )\r\n      );\r\n    } catch (e) {}\r\n    try {\r\n      return Loader.Cardano.PointerAddress.from_address(\r\n        Loader.Cardano.Address.from_bytes(\r\n          fromHex((await window.cardano.selectedWallet.getUsedAddresses())[0])\r\n        )\r\n      );\r\n    } catch (e) {}\r\n    throw Error(\"Not supported address type\");\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} budId\r\n   * @returns {TradeUtxo}\r\n   */\r\n  async getBid(budId) {\r\n    console.log(`getUtxo w policy: ${this.contractInfo.policyBid} , prefix: ${this.contractInfo.prefixSpaceBudBid}, id: ${budId.toString()}`)\r\n    let budString = budId.toString().padStart(5, \"0\")\r\n    console.log(budString)\r\n    // let numZeros = 5 - budString.length\r\n    const bidUtxo = await this.getUtxo(\r\n      this.contractInfo.policyBid,\r\n      this.contractInfo.prefixSpaceBudBid,\r\n      budString\r\n    );\r\n    if (bidUtxo.length !== 1) return null;\r\n    const lovelace = bidUtxo[0].utxo.output().amount().coin().to_str();\r\n    return { ...bidUtxo[0], lovelace };\r\n  }\r\n\r\n  /**\r\n   * @param {TradeUtxo} bidUtxo\r\n   * @param {string} bidAmount lovelace amount\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async bid(bidUtxo, bidAmount) {\r\n    const { txBuilder, datums, metadata, outputs } = await this.initTx();\r\n    const budId = bidUtxo.budId;\r\n\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    datums.add(bidUtxo.datum);\r\n\r\n    const bidDatum = BID({\r\n      tradeOwner: toHex(walletAddress.payment_cred().to_keyhash().to_bytes()),\r\n      budId,\r\n    });\r\n\r\n    const datumType = bidUtxo.datum.as_constr_plutus_data().tag().as_i32();\r\n    const value = bidUtxo.utxo.output().amount();\r\n    if (datumType === DATUM_TYPE.StartBid) {\r\n      if (\r\n        Loader.Cardano.BigNum.from_str(bidAmount).compare(\r\n          this.contractInfo.minPrice\r\n        ) == -1\r\n      )\r\n        throw new Error(\"Amount too small\");\r\n      if (this.policyBidLength(value) > 1) {\r\n        outputs.add(\r\n          this.createOutput(\r\n            CONTRACT_ADDRESS(),\r\n            assetsToValue([\r\n              { unit: \"lovelace\", quantity: bidAmount },\r\n              {\r\n                unit:\r\n                  this.contractInfo.policyBid +\r\n                  fromAscii(this.contractInfo.prefixSpaceBudBid + budId),\r\n                quantity: \"1\",\r\n              },\r\n            ]),\r\n            {\r\n              datum: bidDatum,\r\n              index: 0,\r\n              tradeOwnerAddress: walletAddress,\r\n              metadata,\r\n            }\r\n          )\r\n        );\r\n        datums.add(bidDatum);\r\n        outputs.add(\r\n          this.createOutput(\r\n            CONTRACT_ADDRESS(),\r\n            this.policyBidRemaining(bidUtxo.utxo.output().amount(), budId),\r\n            {\r\n              datum: START_BID(),\r\n              index: 1,\r\n              metadata,\r\n            }\r\n          )\r\n        );\r\n        datums.add(START_BID());\r\n      } else {\r\n        outputs.add(\r\n          this.createOutput(\r\n            CONTRACT_ADDRESS(),\r\n            assetsToValue([\r\n              { unit: \"lovelace\", quantity: bidAmount },\r\n              {\r\n                unit:\r\n                  this.contractInfo.policyBid +\r\n                  fromAscii(this.contractInfo.prefixSpaceBudBid + budId),\r\n                quantity: \"1\",\r\n              },\r\n            ]),\r\n            {\r\n              datum: bidDatum,\r\n              index: 0,\r\n              tradeOwnerAddress: walletAddress,\r\n              metadata,\r\n            }\r\n          )\r\n        );\r\n        datums.add(bidDatum);\r\n      }\r\n    } else if (datumType == DATUM_TYPE.Bid) {\r\n      if (\r\n        Loader.Cardano.BigNum.from_str(bidAmount).compare(\r\n          this.contractInfo.bidStep.checked_add(value.coin())\r\n        ) == -1\r\n      )\r\n        throw new Error(\"Amount too small\");\r\n      outputs.add(\r\n        this.createOutput(\r\n          CONTRACT_ADDRESS(),\r\n          assetsToValue([\r\n            { unit: \"lovelace\", quantity: bidAmount },\r\n            {\r\n              unit:\r\n                this.contractInfo.policyBid +\r\n                fromAscii(this.contractInfo.prefixSpaceBudBid + budId),\r\n              quantity: \"1\",\r\n            },\r\n          ]),\r\n          {\r\n            datum: bidDatum,\r\n            index: 0,\r\n            tradeOwnerAddress: walletAddress,\r\n            metadata,\r\n          }\r\n        )\r\n      );\r\n      datums.add(bidDatum);\r\n      if (\r\n        bidUtxo.tradeOwnerAddress.to_bech32() !=\r\n        walletAddress.to_address().to_bech32()\r\n      )\r\n        // check if bidder is owner of utxo. if so, not necessary to pay back to you own address\r\n        outputs.add(\r\n          this.createOutput(\r\n            bidUtxo.tradeOwnerAddress,\r\n            Loader.Cardano.Value.new(value.coin())\r\n          )\r\n        );\r\n      else {\r\n        const requiredSigners = Loader.Cardano.Ed25519KeyHashes.new();\r\n        requiredSigners.add(walletAddress.payment_cred().to_keyhash());\r\n        txBuilder.set_required_signers(requiredSigners);\r\n      }\r\n    }\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      metadata,\r\n      scriptUtxo: bidUtxo.utxo,\r\n      action: BID_HIGHER,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TradeUtxo} bidUtxo\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async sell(bidUtxo) {\r\n    const { txBuilder, datums, metadata, outputs } = await this.initTx();\r\n    const budId = bidUtxo.budId;\r\n\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    datums.add(bidUtxo.datum);\r\n\r\n    const datumType = bidUtxo.datum.as_constr_plutus_data().tag().as_i32();\r\n    const value = bidUtxo.utxo.output().amount();\r\n    if (datumType !== DATUM_TYPE.Bid) throw new Error(\"Datum needs to be Bid\");\r\n    outputs.add(\r\n      this.createOutput(\r\n        CONTRACT_ADDRESS(),\r\n        assetsToValue([\r\n          {\r\n            unit:\r\n              this.contractInfo.policyBid +\r\n              fromAscii(this.contractInfo.prefixSpaceBudBid + budId),\r\n            quantity: \"1\",\r\n          },\r\n        ]),\r\n        {\r\n          datum: START_BID(),\r\n          index: 0,\r\n          metadata,\r\n        }\r\n      )\r\n    );\r\n    datums.add(START_BID());\r\n    this.splitAmount(value.coin(), walletAddress.to_address(), outputs);\r\n    outputs.add(\r\n      this.createOutput(\r\n        bidUtxo.tradeOwnerAddress,\r\n        assetsToValue([\r\n          {\r\n            unit:\r\n              this.contractInfo.policySpaceBudz +\r\n              fromAscii(this.contractInfo.prefixSpaceBud + budId),\r\n            quantity: \"1\",\r\n          },\r\n        ])\r\n      )\r\n    ); // bidder receiving SpaceBud\r\n\r\n    const requiredSigners = Loader.Cardano.Ed25519KeyHashes.new();\r\n    requiredSigners.add(walletAddress.payment_cred().to_keyhash());\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      metadata,\r\n      scriptUtxo: bidUtxo.utxo,\r\n      action: SELL,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} budId\r\n   * @param {string} requestedAmount lovelace\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async offer(budId, requestedAmount) {\r\n    const { txBuilder, datums, metadata, outputs } = await this.initTx();\r\n    budId = budId.toString().padStart(5, \"0\");\r\n    if (\r\n      Loader.Cardano.BigNum.from_str(requestedAmount).compare(\r\n        this.contractInfo.minPrice\r\n      ) == -1\r\n    )\r\n      throw new Error(\"Amount too small\");\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    const offerDatum = OFFER({\r\n      tradeOwner: toHex(walletAddress.payment_cred().to_keyhash().to_bytes()),\r\n      budId,\r\n      requestedAmount,\r\n    });\r\n    outputs.add(\r\n      this.createOutput(\r\n        CONTRACT_ADDRESS(),\r\n        assetsToValue([\r\n          {\r\n            unit:\r\n              this.contractInfo.policySpaceBudz +\r\n              fromAscii(this.contractInfo.prefixSpaceBud + budId),\r\n            quantity: \"1\",\r\n          },\r\n        ]),\r\n        {\r\n          datum: offerDatum,\r\n          index: 0,\r\n          tradeOwnerAddress: walletAddress,\r\n          metadata,\r\n        }\r\n      )\r\n    );\r\n    datums.add(offerDatum);\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      metadata,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   * @param {TradeUtxo} offerUtxo\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async buy(offerUtxo) {\r\n    const { txBuilder, datums, outputs } = await this.initTx();\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    datums.add(offerUtxo.datum);\r\n\r\n    const datumType = offerUtxo.datum.as_constr_plutus_data().tag().as_i32();\r\n    const tradeDetails = getTradeDetails(offerUtxo.datum);\r\n    const value = offerUtxo.utxo.output().amount();\r\n    const lovelaceAmount = tradeDetails.requestedAmount;\r\n    if (datumType !== DATUM_TYPE.Offer)\r\n      throw new Error(\"Datum needs to be Offer\");\r\n    this.splitAmount(lovelaceAmount, offerUtxo.tradeOwnerAddress, outputs);\r\n\r\n    outputs.add(this.createOutput(walletAddress.to_address(), value)); // buyer receiving SpaceBud\r\n\r\n    const requiredSigners = Loader.Cardano.Ed25519KeyHashes.new();\r\n    requiredSigners.add(walletAddress.payment_cred().to_keyhash());\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      scriptUtxo: offerUtxo.utxo,\r\n      action: BUY,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   * @param {TradeUtxo} offerUtxo\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async cancelOffer(offerUtxo) {\r\n    const { txBuilder, datums, outputs } = await this.initTx();\r\n\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    datums.add(offerUtxo.datum);\r\n\r\n    const datumType = offerUtxo.datum.as_constr_plutus_data().tag().as_i32();\r\n    const value = offerUtxo.utxo.output().amount();\r\n    if (datumType !== DATUM_TYPE.Offer)\r\n      throw new Error(\"Datum needs to be Offer\");\r\n    const requiredSigners = Loader.Cardano.Ed25519KeyHashes.new();\r\n    requiredSigners.add(getTradeDetails(offerUtxo.datum).tradeOwner);\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      scriptUtxo: offerUtxo.utxo,\r\n      action: CANCEL,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   * @param {TradeUtxo} bidUtxo\r\n   * @returns {string} Transaction Id\r\n   */\r\n  async cancelBid(bidUtxo) {\r\n    const { txBuilder, datums, metadata, outputs } = await this.initTx();\r\n    const budId = bidUtxo.budId;\r\n    const walletAddress = await this.getAddress();\r\n\r\n    const utxos = (await window.cardano.selectedWallet.getUtxos()).map((utxo) =>\r\n      Loader.Cardano.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n    datums.add(bidUtxo.datum);\r\n\r\n    const datumType = bidUtxo.datum.as_constr_plutus_data().tag().as_i32();\r\n    const value = bidUtxo.utxo.output().amount();\r\n    if (datumType !== DATUM_TYPE.Bid) throw new Error(\"Datum needs to be Bid\");\r\n    outputs.add(\r\n      this.createOutput(\r\n        CONTRACT_ADDRESS(),\r\n        assetsToValue([\r\n          {\r\n            unit:\r\n              this.contractInfo.policyBid +\r\n              fromAscii(this.contractInfo.prefixSpaceBudBid + budId),\r\n            quantity: \"1\",\r\n          },\r\n        ]),\r\n        {\r\n          datum: START_BID(),\r\n          index: 0,\r\n          metadata,\r\n        }\r\n      )\r\n    );\r\n    datums.add(START_BID());\r\n    const requiredSigners = Loader.Cardano.Ed25519KeyHashes.new();\r\n    requiredSigners.add(getTradeDetails(bidUtxo.datum).tradeOwner);\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await this.finalizeTx({\r\n      txBuilder,\r\n      changeAddress: walletAddress,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      metadata,\r\n      scriptUtxo: bidUtxo.utxo,\r\n      action: CANCEL,\r\n    });\r\n    return txHash;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} txHash Transaction Id\r\n   * @returns\r\n   */\r\n  async awaitConfirmation(txHash) {\r\n    return new Promise((res, rej) => {\r\n      const confirmation = setInterval(async () => {\r\n        const isConfirmed = await this.blockfrostRequest(`/txs/${txHash}`);\r\n        if (isConfirmed && !isConfirmed.error) {\r\n          clearInterval(confirmation);\r\n          res(txHash);\r\n          return;\r\n        }\r\n      }, 5000);\r\n    });\r\n  }\r\n}\r\n\r\nexport default SpaceBudzMarket;\r\n","export const contract = // 591a4c\r\n  \"\";\r\n","export const languageViews =\r\n  \"a141005901d59f1a000302590001011a00060bc719026d00011a000249f01903e800011a000249f018201a0025cea81971f70419744d186419744d186419744d186419744d186419744d186419744d18641864186419744d18641a000249f018201a000249f018201a000249f018201a000249f01903e800011a000249f018201a000249f01903e800081a000242201a00067e2318760001011a000249f01903e800081a000249f01a0001b79818f7011a000249f0192710011a0002155e19052e011903e81a000249f01903e8011a000249f018201a000249f018201a000249f0182001011a000249f0011a000249f0041a000194af18f8011a000194af18f8011a0002377c190556011a0002bdea1901f1011a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000242201a00067e23187600010119f04c192bd200011a000249f018201a000242201a00067e2318760001011a000242201a00067e2318760001011a0025cea81971f704001a000141bb041a000249f019138800011a000249f018201a000302590001011a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a00330da70101ff\";\r\n","import React from \"react\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport MiddleEllipsis from \"react-middle-ellipsis\";\r\nimport { navigate } from \"gatsby\";\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\";\r\nimport Metadata from \"../components/Metadata\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ShareModal,\r\n  TradeModal,\r\n  SuccessTransactionToast,\r\n  PendingTransactionToast,\r\n  tradeErrorHandler,\r\n} from \"../components/Modal\";\r\nimport { Share2 } from \"@geist-ui/react-icons\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Link,\r\n  Tooltip,\r\n  Button,\r\n  ButtonGroup,\r\n  IconButton,\r\n  Spinner,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { SmallCloseIcon, RepeatIcon } from \"@chakra-ui/icons\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport Market from \"../cardano/market\";\r\nimport secrets from \"../../secrets\";\r\nimport { UnitDisplay } from \"../components/UnitDisplay\";\r\nimport Loader from \"../cardano/loader\";\r\nimport Show from \"../images/assets/show.svg\";\r\n\r\nexport const toHex = (bytes) => Buffer.from(bytes).toString(\"hex\");\r\nconst isBrowser = () => typeof window !== \"undefined\";\r\n\r\nconst World = (props) => {\r\n   /* old vars here ================================================================================ */\r\n  const spacebud = props.spacebud; \r\n  const matches = useBreakpoint();\r\n  const toast = useToast();\r\n  const [owner, setOwner] = React.useState([]);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const tradeRef = React.useRef();\r\n  const vrSrcRef = React.useRef();\r\n  const [isLoadingMarket, setIsLoadingMarket] = React.useState(true);\r\n  const [isLoadingVR, setIsLoadingVR] = React.useState(false);\r\n  const [details, setDetails] = React.useState({\r\n    bid: { bidUtxo: null, lovelace: null, usd: null, owner: false },\r\n    offer: { offerUtxo: null, lovelace: null, usd: null, owner: true },\r\n    lastSale: { lovelace: null, usd: null },\r\n  });\r\n  const [loadingButton, setLoadingButton] = React.useState({\r\n    cancelBid: false,\r\n    bid: false,\r\n    buy: false,\r\n    offer: false,\r\n    cancelOffer: false,\r\n    sell: false,\r\n  });\r\n  const connected = useStoreState((state) => state.connection.connected);\r\n\r\n  const market = React.useRef();\r\n\r\n  const POLICY = \"3c2cfd4f1ad33678039cfd0347cca8df363c710067d739624218abc0\"; // mainnet\r\n  const CONTRACT_ADDRESS =\r\n    // \"addr1wyvvtqlx34nu8xkpe86dcznlj9kwgpy97x0zpgqnr782hvcyjjcdh\";\r\n    \"addr1zyvvtqlx34nu8xkpe86dcznlj9kwgpy97x0zpgqnr782hvlassd377xwhjrwyuqtxsces0ksaev6s7pllvd7hrpfn98q35a5tz\"; // This is the staked version of the address above.\r\n\r\n  const connectedAddresses = React.useRef([]);\r\n\r\n  const isOwner = (address) =>\r\n    connectedAddresses.current.length > 0\r\n      ? connectedAddresses.current.some((addr) => addr === address)\r\n      : false;\r\n\r\n  const firstUpdate = React.useRef(true);\r\n  const init = async () => {\r\n    connectedAddresses.current = connected\r\n      ? (await window.cardano.selectedWallet.getUsedAddresses()).map((addr) =>\r\n          Loader.Cardano.Address.from_bytes(\r\n            Buffer.from(addr, \"hex\")\r\n          ).to_bech32()\r\n        )\r\n      : [];\r\n    if (firstUpdate.current) {\r\n      await loadMarket();\r\n      await loadSpaceBudData();\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    await loadSpaceBudData();\r\n  };\r\n  \r\n  const checkTransaction = async (txHash, { type, lovelace } = {}) => { // TODO - Where is this used, can we remove it?\r\n    if (!txHash) return;\r\n    PendingTransactionToast(toast);\r\n    if (type) {\r\n      fetch(\"https://api.spacebudzbot.com/tweet\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + secrets.TWITTER_BOT_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: spacebud.id.toString(), type, lovelace }),\r\n      })\r\n        .then(console.log)\r\n        .catch(console.log);\r\n    }\r\n    await market.current.awaitConfirmation(txHash);\r\n    toast.closeAll();\r\n    SuccessTransactionToast(toast, txHash);\r\n    await new Promise((res, rej) => setTimeout(() => res(), 1000));\r\n    loadSpaceBudData();\r\n  };\r\n\r\n  const loadMarket = async () => {\r\n    market.current = new Market(\r\n      {\r\n        base: \"https://cardano-mainnet.blockfrost.io/api/v0\",\r\n        projectId: secrets.PROJECT_ID,\r\n      },\r\n      \"\"\r\n    );\r\n    await market.current.load(); // TODO - Do we need to fix load at all?\r\n  };\r\n\r\n  const loadSpaceBudData = async () => { // TODO - We can load the worlds within here based purely on ID I think.\r\n    await Loader.load();\r\n    setIsLoadingMarket(true);\r\n    setOwner([]);\r\n    const sid = (spacebud.id).padStart(5, \"0\")\r\n    console.log(sid)\r\n    const token = POLICY + toHex(`WorldsWithin${sid}`);\r\n    console.log(\"between sid and token\")\r\n    console.log(token)\r\n    let addresses = await fetch(\r\n      `https://cardano-mainnet.blockfrost.io/api/v0/assets/${token}/addresses`,\r\n      { headers: { project_id: secrets.PROJECT_ID } }\r\n    ).then((res) => res.json());\r\n    const fiatPrice = await fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=cardano&vs_currencies=usd`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => res.cardano[\"usd\"]);\r\n    const lastSale = null // {\"budId\":spacebud.id,\"offer\":null,\"bid\":null,\"lastSale\":null}\r\n    /*await fetch( // TODO - Remove or replace. - Where are these being published from?\r\n      `https://spacebudz.io/api/specificSpaceBud/${spacebud.id}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => res.lastSale);*/\r\n\r\n    const bidUtxo = await market.current.getBid(spacebud.id);\r\n    let offerUtxo = await market.current.getOffer(spacebud.id);\r\n\r\n    // check if twin\r\n    /*if (Array.isArray(offerUtxo)) {\r\n      if (\r\n        offerUtxo.length === 2 &&\r\n        (spacebud.id === 1903 || spacebud.id === 6413)\r\n      ) {\r\n        const ownerUtxo = offerUtxo.find((utxo) =>\r\n          isOwner(utxo.tradeOwnerAddress.to_bech32())\r\n        );\r\n\r\n        if (ownerUtxo) {\r\n          offerUtxo = ownerUtxo;\r\n        } else {\r\n          const offerUtxo1 = offerUtxo[0];\r\n          const offerUtxo2 = offerUtxo[1];\r\n          // set correct owner\r\n          addresses = [\r\n            { adddress: offerUtxo1.tradeOwnerAddress.to_bech32() },\r\n            { address: offerUtxo1.tradeOwnerAddress.to_bech32() },\r\n          ];\r\n          if (\r\n            isBrowser() &&\r\n            window.BigInt(offerUtxo1.lovelace) <\r\n              window.BigInt(offerUtxo2.lovelace)\r\n          ) {\r\n            offerUtxo = offerUtxo1;\r\n          } else {\r\n            offerUtxo = offerUtxo2;\r\n          }\r\n        }\r\n      } else throw new Error(\"Something went wrong\");\r\n    }*/\r\n    const details = {\r\n      bid: { bidUtxo: null, lovelace: null, usd: null, owner: false },\r\n      offer: { offerUtxo: null, lovelace: null, usd: null, owner: false },\r\n      lastSale: { lovelace: null, usd: null },\r\n    };\r\n    details.bid.bidUtxo = bidUtxo;\r\n    details.offer.offerUtxo = offerUtxo;\r\n    console.log(bidUtxo);\r\n    console.log(offerUtxo);\r\n    // ignore if state is StartBid\r\n    if (toHex(bidUtxo.datum.to_bytes()) !== \"d866820080\") {\r\n      if (isOwner(bidUtxo.tradeOwnerAddress.to_bech32())) {\r\n        details.bid.owner = true;\r\n      }\r\n      details.bid.lovelace = bidUtxo.lovelace;\r\n      details.bid.usd = (bidUtxo.lovelace / 10 ** 6) * fiatPrice * 10 ** 2;\r\n    }\r\n    console.log(addresses)\r\n    // console.log(address)\r\n    if (addresses.find((address) => isOwner(address.address)))\r\n      details.offer.owner = true;\r\n    if (offerUtxo) {\r\n      addresses = addresses.map((address) =>\r\n        address.address === CONTRACT_ADDRESS\r\n          ? { address: offerUtxo.tradeOwnerAddress.to_bech32() }\r\n          : address\r\n      );\r\n      if (isOwner(offerUtxo.tradeOwnerAddress.to_bech32())) {\r\n        details.offer.owner = true;\r\n      }\r\n      details.offer.lovelace = offerUtxo.lovelace;\r\n      details.offer.usd = (offerUtxo.lovelace / 10 ** 6) * fiatPrice * 10 ** 2;\r\n    }\r\n\r\n    if (lastSale) {\r\n      details.lastSale.lovelace = lastSale;\r\n      details.lastSale.usd = (lastSale / 10 ** 6) * fiatPrice * 10 ** 2;\r\n    }\r\n\r\n    //check if same address if there are 2\r\n\r\n    if (addresses.length > 1 && addresses[0].address === addresses[1].address) {\r\n      addresses = [addresses[0]];\r\n    }\r\n\r\n    setDetails(details);\r\n    setOwner(addresses);\r\n    setIsLoadingMarket(false);\r\n  };\r\n  \r\n   /* end old vars ================================================================================= */\r\n   \r\n   React.useEffect(() => { \r\n\tconst script = document.createElement(\"script\");\r\n\tscript.src = process.env.SITE_ROOT+\"js/app.js\";\r\n\tscript.async = true;\r\n\tdocument.body.appendChild(script);\r\n\tinit();\r\n  }, [connected]);\r\n   \r\n   return (\r\n    <div>\r\n\t\t{/* Modal */}\r\n          <ShareModal\r\n            bud={spacebud}\r\n            isOpen={isOpen}\r\n            onOpen={onOpen}\r\n            onClose={onClose}\r\n          />\r\n          <TradeModal\r\n            budId={spacebud.id}\r\n            ref={tradeRef}\r\n            market={market.current}\r\n            details={details}\r\n            onConfirm={checkTransaction}\r\n          />\r\n        {/* Modal End */}\r\n\t\t{/* Body */}\r\n\t\t<div className=\"outer__inner\">\r\n\t\t\t<div className=\"section item\">\r\n\t\t\t  <div className=\"item__center center\">\r\n\t\t\t\t<div className=\"item__bg\">\r\n\t\t\t\t  <div className={\"item__preview\" + (isLoadingVR ? \" vr-height\" : \"\")}>\r\n\t\t\t\t\t<div className=\"item__categories\">\r\n\t\t\t\t\t  <div className=\"status-black item__category\">{spacebud.world_type}</div>\r\n\t\t\t\t\t  <div className=\"status-purple item__category\">{spacebud.terrain_trait}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isLoadingVR ? (\r\n\t\t\t\t\t  <>\t\t\t\t \r\n\t\t\t\t\t\t<div className=\"vr_loader\" id={\"vr_loader\"}>\r\n\t\t\t\t\t\t\t<img src={process.env.SITE_ROOT+\"img/loader.gif\"} alt=\"Loader\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<iframe id={\"iframe_vr\"} ref={vrSrcRef} src={spacebud.src.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")} className=\"iframe_vr\" height=\"100%\" width=\"100%\" style={{border: 'none'}}></iframe>\r\n\t\t\t\t\t  </>\t\r\n\t\t\t\t\t ) : (\r\n\t\t\t\t\t  <img srcSet={spacebud.image} src={spacebud.image} alt=\"Item\" />\r\n\t\t\t\t\t )\r\n\t\t\t\t\t}\r\n\t\t\t\t  </div>\r\n\t\t\t\t  {!isLoadingVR && (\r\n\t\t\t\t\t  <div className=\"options\">\r\n\t\t\t\t\t\t<div className=\"options__list\">\r\n\t\t\t\t\t\t  <Button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t  setIsLoadingVR(true);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbgcolor=\"#263238\"\r\n\t\t\t\t\t\t\trounded=\"3xl\"\r\n\t\t\t\t\t\t\tcolorScheme=\"gray\"\r\n\t\t\t\t\t\t\twidth=\"min\"\r\n\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\tLoad Virtual World\r\n\t\t\t\t\t\t  </Button>\t\t  \r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t    ) \r\n\t\t\t\t  }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"item__details\">\r\n\t\t\t\t  <h1 className=\"item__title h3\">WorldsWithin #{spacebud.id}</h1>\r\n\t\t\t\t  {isLoadingMarket ? (\r\n\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t<img src={process.env.SITE_ROOT+\"img/loader.gif\"} alt=\"Loader\" style={{maxWidth: '100px'}}/>\r\n\t\t\t\t\t\t</div>\t  \r\n\t\t\t\t   ) : (\r\n\t\t\t\t   \t<>\r\n\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t<div className=\"status-stroke-green item__price\">\r\n\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.lastSale.lovelace)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#45B26B\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.lastSale.lovelace || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"ADA\"\r\n\t\t\t\t\t\t\t\t\t  decimals={6}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"status-stroke-black item__price\">\r\n\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.lastSale.usd)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#777E90\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.lastSale.usd || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"USD\"\r\n\t\t\t\t\t\t\t\t\t  decimals={2}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"item__counter\">Last Sale</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{details.offer.owner ? (\r\n\t\t\t\t\t\t  <>\r\n\t\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-green item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.bid.lovelace)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#45B26B\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.bid.lovelace || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"ADA\"\r\n\t\t\t\t\t\t\t\t\t  decimals={6}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-black item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.bid.usd)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#777E90\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.bid.usd || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"USD\"\r\n\t\t\t\t\t\t\t\t\t  decimals={2}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"item__counter\">Sell Now Price</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"itemcontrol_group\">\r\n\t\t\t\t\t\t\t\t{details.bid.owner ? (\r\n\t\t\t\t\t\t\t\t\t<Tooltip label=\"Cancel Bid\" rounded=\"3xl\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t  isDisabled={loadingButton.cancelBid}\r\n\t\t\t\t\t\t\t\t\t\t  isLoading={loadingButton.cancelBid}\r\n\t\t\t\t\t\t\t\t\t\t  onClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!connected) return;\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t\t  cancelBid: true,\r\n\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t\tconst txHash = await market.current\r\n\t\t\t\t\t\t\t\t\t\t\t  .cancelBid(details.bid.bidUtxo)\r\n\t\t\t\t\t\t\t\t\t\t\t  .catch((e) => tradeErrorHandler(e, toast));\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t\t  cancelBid: false,\r\n\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t\tcheckTransaction(txHash);\r\n\t\t\t\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t\t  size=\"md\"\r\n\t\t\t\t\t\t\t\t\t\t  color=\"white\"\r\n\t\t\t\t\t\t\t\t\t\t  bgColor=\"red.300\"\r\n\t\t\t\t\t\t\t\t\t\t  colorScheme=\"red\">\r\n\t\t\t\t\t\t\t\t\t\t  Cancel Bid\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\t\t\t  \r\n\t\t\t\t\t\t\t\t ) : (\r\n\t\t\t\t\t\t\t\t\t<Tooltip label={\r\n\t\t\t\t\t\t\t\t\t\t  details.offer.offerUtxo &&\r\n\t\t\t\t\t\t\t\t\t\t  isOwner(\r\n\t\t\t\t\t\t\t\t\t\t\tdetails.offer.offerUtxo.tradeOwnerAddress.to_bech32()\r\n\t\t\t\t\t\t\t\t\t\t  ) &&\r\n\t\t\t\t\t\t\t\t\t\t  \"Cancel Offer first\"\r\n\t\t\t\t\t\t\t\t\t\t} rounded=\"3xl\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t  isDisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t!Boolean(details.bid.lovelace) || loadingButton.sell\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t  isLoading={loadingButton.sell}\r\n\t\t\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t\t  size=\"md\"\r\n\t\t\t\t\t\t\t\t\t\t  colorScheme=\"purple\"\r\n\t\t\t\t\t\t\t\t\t\t  width=\"min\"\r\n\t\t\t\t\t\t\t\t\t\t  bgcolor=\"#263238\"\r\n\t\t\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t\t  width=\"min\"\r\n\t\t\t\t\t\t\t\t\t\t  onClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t  !connected ||\r\n\t\t\t\t\t\t\t\t\t\t\t  (details.offer.offerUtxo &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tisOwner(\r\n\t\t\t\t\t\t\t\t\t\t\t\t  details.offer.offerUtxo.tradeOwnerAddress.to_bech32()\r\n\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t  return;\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t\t  sell: true,\r\n\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t\tconst txHash = await market.current\r\n\t\t\t\t\t\t\t\t\t\t\t  .sell(details.bid.bidUtxo)\r\n\t\t\t\t\t\t\t\t\t\t\t  .catch((e) => tradeErrorHandler(e, toast));\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t\t  sell: false,\r\n\t\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\t\tcheckTransaction(txHash, {\r\n\t\t\t\t\t\t\t\t\t\t\t  type: \"sold\",\r\n\t\t\t\t\t\t\t\t\t\t\t  lovelace: details.bid.lovelace,\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t  }}>\r\n\t\t\t\t\t\t\t\t\t\t  Sell\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{ details.offer.lovelace &&\r\n\t\t\t\t\t\t\t\t  details.offer.offerUtxo &&\r\n\t\t\t\t\t\t\t\t  isOwner(\r\n\t\t\t\t\t\t\t\t\tdetails.offer.offerUtxo.tradeOwnerAddress.to_bech32()\r\n\t\t\t\t\t\t\t\t  ) ? (\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Tooltip label=\"Cancel Offer\" rounded=\"3xl\">\r\n\t\t\t\t\t\t\t\t\t  <Button\r\n\t\t\t\t\t\t\t\t\t\tisDisabled={loadingButton.cancelOffer}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={loadingButton.cancelOffer}\r\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\t  if (!connected) return;\r\n\t\t\t\t\t\t\t\t\t\t  setLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t...l,\r\n\t\t\t\t\t\t\t\t\t\t\tcancelOffer: true,\r\n\t\t\t\t\t\t\t\t\t\t  }));\r\n\t\t\t\t\t\t\t\t\t\t  const txHash = await market.current\r\n\t\t\t\t\t\t\t\t\t\t\t.cancelOffer(details.offer.offerUtxo)\r\n\t\t\t\t\t\t\t\t\t\t\t.catch((e) => tradeErrorHandler(e, toast));\r\n\t\t\t\t\t\t\t\t\t\t  setLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t...l,\r\n\t\t\t\t\t\t\t\t\t\t\tcancelOffer: false,\r\n\t\t\t\t\t\t\t\t\t\t  }));\r\n\t\t\t\t\t\t\t\t\t\t  checkTransaction(txHash);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"white\"\r\n\t\t\t\t\t\t\t\t\t\tbgColor=\"red.300\"\r\n\t\t\t\t\t\t\t\t\t\tcolorScheme=\"red\"\r\n\t\t\t\t\t\t\t\t\t\trounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Add to friends\"\r\n\t\t\t\t\t\t\t\t\t\ticon={<SmallCloseIcon />}\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\tCancel Offer\r\n\t\t\t\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t  ) : (\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t  variant=\"outline\"\r\n\t\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t  colorScheme=\"gray\"\r\n\t\t\t\t\t\t\t\t\t  onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!connected) return;\r\n\t\t\t\t\t\t\t\t\t\ttradeRef.current.openModal({\r\n\t\t\t\t\t\t\t\t\t\t  minPrice: \"20000000\",\r\n\t\t\t\t\t\t\t\t\t\t  type: \"OFFER\",\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t  List\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"status-stroke-green item__price\">\r\n\t\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.offer.lovelace)}\r\n\t\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t\t  color=\"#45B26B\"\r\n\t\t\t\t\t\t\t\t\t\t  quantity={details.offer.lovelace || 0}\r\n\t\t\t\t\t\t\t\t\t\t  symbol=\"ADA\"\r\n\t\t\t\t\t\t\t\t\t\t  decimals={6}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"status-stroke-black item__price\">\r\n\t\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.offer.usd)}\r\n\t\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t\t  color=\"#777E90\"\r\n\t\t\t\t\t\t\t\t\t\t  quantity={details.offer.usd || 0}\r\n\t\t\t\t\t\t\t\t\t\t  symbol=\"USD\"\r\n\t\t\t\t\t\t\t\t\t\t  decimals={2}\r\n\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"item__counter\">Ask price</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </>\r\n\t\t\t\t\t\t ) : (\r\n\t\t\t\t\t\t  <>\r\n\t\t\t\t\t\t   <div className=\"itemcontrol_group\">\r\n\t\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-green item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.offer.lovelace)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#45B26B\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.offer.lovelace || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"ADA\"\r\n\t\t\t\t\t\t\t\t\t  decimals={6}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-black item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.offer.usd)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#777E90\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.offer.usd || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"USD\"\r\n\t\t\t\t\t\t\t\t\t  decimals={2}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"item__counter\">Purchase Price</div>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Tooltip \r\n\t\t\t\t\t\t\t  label={\r\n\t\t\t\t\t\t\t\t(!connected && \"Connect wallet\") ||\r\n\t\t\t\t\t\t\t\t(details.bid.owner &&\r\n\t\t\t\t\t\t\t\t  details.bid.lovelace &&\r\n\t\t\t\t\t\t\t\t  \"Cancel Bid first\")\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t  <Button\r\n\t\t\t\t\t\t\t\tisDisabled={\r\n\t\t\t\t\t\t\t\t  !Boolean(details.offer.lovelace) || loadingButton.buy\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tisLoading={loadingButton.buy}\r\n\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t  if (!connected || details.bid.owner) return;\r\n\t\t\t\t\t\t\t\t  setLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t...l,\r\n\t\t\t\t\t\t\t\t\tbuy: true,\r\n\t\t\t\t\t\t\t\t  }));\r\n\t\t\t\t\t\t\t\t  const txHash = await market.current\r\n\t\t\t\t\t\t\t\t\t.buy(details.offer.offerUtxo)\r\n\t\t\t\t\t\t\t\t\t.catch((e) => tradeErrorHandler(e, toast));\r\n\t\t\t\t\t\t\t\t  setLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t...l,\r\n\t\t\t\t\t\t\t\t\tbuy: false,\r\n\t\t\t\t\t\t\t\t  }));\r\n\t\t\t\t\t\t\t\t  checkTransaction(txHash, {\r\n\t\t\t\t\t\t\t\t\ttype: \"bought\",\r\n\t\t\t\t\t\t\t\t\tlovelace: details.offer.lovelace,\r\n\t\t\t\t\t\t\t\t  });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\trounded=\"3xl\"\r\n\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\tclassName=\"blue-button\"\r\n\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\r\n\t\t\t\t\t\t\t\twidth=\"min\"\r\n\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\tPurchase now\r\n\t\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t   <div className=\"itemcontrol_group\">\r\n\t\t\t\t\t\t\t<div className=\"item__cost\">\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-green item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.bid.lovelace)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#45B26B\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.bid.lovelace || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"ADA\"\r\n\t\t\t\t\t\t\t\t\t  decimals={6}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"status-stroke-black item__price\">\r\n\t\t\t\t\t\t\t\t\t<UnitDisplay\r\n\t\t\t\t\t\t\t\t\t  showQuantity={!Boolean(details.bid.usd)}\r\n\t\t\t\t\t\t\t\t\t  fontSize={16}\r\n\t\t\t\t\t\t\t\t\t  color=\"#777E90\"\r\n\t\t\t\t\t\t\t\t\t  quantity={details.bid.usd || 0}\r\n\t\t\t\t\t\t\t\t\t  symbol=\"USD\"\r\n\t\t\t\t\t\t\t\t\t  decimals={2}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"item__counter\">Bid Price</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<ButtonGroup size=\"md\" isAttached variant=\"outline\">\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t  label={!connected && \"Connect wallet\"}\r\n\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t  <Button\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t  if (!connected) return;\r\n\t\t\t\t\t\t\t\t\t  tradeRef.current.openModal({\r\n\t\t\t\t\t\t\t\t\t\tminPrice: details.bid.lovelace\r\n\t\t\t\t\t\t\t\t\t\t  ? (\r\n\t\t\t\t\t\t\t\t\t\t\t  isBrowser() &&\r\n\t\t\t\t\t\t\t\t\t\t\t  window.BigInt(details.bid.lovelace) +\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.BigInt(\"10000\")\r\n\t\t\t\t\t\t\t\t\t\t\t).toString()\r\n\t\t\t\t\t\t\t\t\t\t  : \"20000000\",\r\n\t\t\t\t\t\t\t\t\t\ttype: \"BID\",\r\n\t\t\t\t\t\t\t\t\t  });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tbgcolor=\"#263238\"\r\n\t\t\t\t\t\t\t\t\trounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\tcolorScheme=\"gray\"\r\n\t\t\t\t\t\t\t\t\twidth=\"min\"\r\n\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\tPlace a Bid\r\n\t\t\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{details.bid.owner && (\r\n\t\t\t\t\t\t\t\t  <Tooltip label=\"Cancel Bid\" rounded=\"3xl\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t  isDisabled={loadingButton.cancelBid}\r\n\t\t\t\t\t\t\t\t\t  isLoading={loadingButton.cancelBid}\r\n\t\t\t\t\t\t\t\t\t  onClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\tif (!connected) return;\r\n\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t  cancelBid: true,\r\n\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\tconst txHash = await market.current\r\n\t\t\t\t\t\t\t\t\t\t  .cancelBid(details.bid.bidUtxo)\r\n\t\t\t\t\t\t\t\t\t\t  .catch((e) => tradeErrorHandler(e, toast));\r\n\t\t\t\t\t\t\t\t\t\tsetLoadingButton((l) => ({\r\n\t\t\t\t\t\t\t\t\t\t  ...l,\r\n\t\t\t\t\t\t\t\t\t\t  cancelBid: false,\r\n\t\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t\t\tcheckTransaction(txHash);\r\n\t\t\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t\t\t  bgColor=\"red.300\"\r\n\t\t\t\t\t\t\t\t\t  variant=\"solid\"\r\n\t\t\t\t\t\t\t\t\t  rounded=\"3xl\"\r\n\t\t\t\t\t\t\t\t\t  aria-label=\"Add to friends\"\r\n\t\t\t\t\t\t\t\t\t  icon={<SmallCloseIcon />}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t  </Tooltip>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t   </div>\t\r\n\t\t\t\t\t\t  </>\r\n\t\t\t\t\t\t )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</>\r\n\t\t\t\t   )\r\n\t\t\t\t  }\r\n\t\t\t\t  <div className=\"item__control\">\t\t\t\t\t\r\n\t\t\t\t\t{/* <div className=\"item__btns\"><a className=\"button item__button js-popup-open\" href=\"#popup-purchase\" data-effect=\"mfp-zoom-in\">Purchase now</a><a className=\"button-stroke item__button js-popup-open\" href=\"#popup-bid\" data-effect=\"mfp-zoom-in\">Place a bid</a></div> */}\r\n\t\t\t\t\t<div className=\"item__variants\">Service fee <span className=\"item__percent\">~ 2.4%</span></div>\r\n\t\t\t\t  </div>\t\t\t\t  \r\n\t\t\t\t  <div className=\"item__tabs js-tabs\">\r\n\t\t\t\t\t<div className=\"item__nav\"><a className=\"item__link js-tabs-link active\" href=\"#\">Info</a><a className=\"item__link js-tabs-link\" href=\"#\">Owners</a>{/* <a className=\"item__link js-tabs-link\" href=\"#\">History</a><a className=\"item__link js-tabs-link\" href=\"#\">Bids</a> */}</div>\r\n\t\t\t\t\t<div className=\"item__container\">\r\n\t\t\t\t\t  <div className=\"item__box js-tabs-item\" style={{display: \"block\"}}>\r\n\t\t\t\t\t\t<div className=\"item__users\">\r\n\t\t\t\t\t\t  <div className=\"item__user\">\r\n\t\t\t\t\t\t\t<div className=\"item__avatar\"><img src={process.env.SITE_ROOT+\"img/icon-planet.png\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t\t\t\t<div className=\"item__description\">\r\n\t\t\t\t\t\t\t  <div className=\"item__position\">World Type</div>\r\n\t\t\t\t\t\t\t  <div className=\"item__name\">{spacebud.world_type}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"item__user\">\r\n\t\t\t\t\t\t\t<div className=\"item__avatar\"><img src={process.env.SITE_ROOT+\"img/icon-terrain.png\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t\t\t\t<div className=\"item__description\">\r\n\t\t\t\t\t\t\t  <div className=\"item__position\">Terrain Trait &amp; color</div>\r\n\t\t\t\t\t\t\t  <div className=\"item__name\">{spacebud.terrain_trait} <span className=\"terrain_color\" style={{backgroundColor: '#'+spacebud.terrain_color}} title={spacebud.terrain_color}>&nbsp;</span></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  <div className=\"item__user\">\r\n\t\t\t\t\t\t\t<div className=\"item__avatar\"><img src={process.env.SITE_ROOT+\"img/icon-daylength.png\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t\t\t\t<div className=\"item__description\">\r\n\t\t\t\t\t\t\t  <div className=\"item__position\">Year &amp; Day Length</div>\r\n\t\t\t\t\t\t\t  <div className=\"item__name\">{spacebud.year_length} and {spacebud.day_length}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  <div className=\"item__user\">\r\n\t\t\t\t\t\t\t<div className=\"item__avatar\"><img src={process.env.SITE_ROOT+\"img/icon-traits.png\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t\t\t\t<div className=\"item__description\">\r\n\t\t\t\t\t\t\t  <div className=\"item__position\">Traits ({spacebud.gadgets.length})</div>\r\n\t\t\t\t\t\t\t  <div className=\"item__name\">{spacebud.gadgets.map((item, i) => (\r\n\t\t\t\t\t\t\t\t   <span className=\"trait\">{item}</span>\r\n\t\t\t\t\t\t\t  ))}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"item__box js-tabs-item\">\r\n\t\t\t\t\t\t<div className=\"item__users\">\r\n\t\t\t\t\t\t  {owner.length > 0 ? (\r\n\t\t\t\t\t\t\t owner.map((item, i) => (\t\t\t\t   \r\n\t\t\t\t\t\t\t\t <div className=\"item__user owner\" key={i}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"item__avatar\"><img src={process.env.SITE_ROOT+\"img/icon-owner.png\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"item__description\">\r\n\t\t\t\t\t\t\t\t\t  <div className=\"item__position\">Owner</div>\r\n\t\t\t\t\t\t\t\t\t  <div className=\"item__name owner\">\r\n\t\t\t\t\t\t\t\t\t  \t<MiddleEllipsis>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link underline color=\"purple.600\" \r\n\t\t\t\t\t\t\t\t\t\t\t    className=\"owner\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t  if (owner) navigate(`${process.env.SITE_ROOT}profile?address=${item.address}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.address}\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</MiddleEllipsis>\r\n\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t ))\r\n\t\t\t\t\t\t   ) : (\r\n\t\t\t\t\t\t\t  <img src={process.env.SITE_ROOT+\"img/loader.gif\"} alt=\"Loader\" style={{maxWidth: '100px'}}/>\t\t\t   \r\n\t\t\t\t\t\t   )}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\t\t\t\t\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_purchase mfp-hide\" id=\"popup-purchase\">\r\n\t\t\t  <div className=\"popup__item\" style={{display: \"block\"}}>\r\n\t\t\t\t<div className=\"popup__title h4\">Checkout</div>\r\n\t\t\t\t<div className=\"popup__info\">You are about to purchase <strong>C O I N Z</strong> from <strong>UI8</strong></div>\r\n\t\t\t\t<div className=\"popup__table\">\r\n\t\t\t\t  <div className=\"popup__row\">\r\n\t\t\t\t\t<div className=\"popup__col\">0.007</div>\r\n\t\t\t\t\t<div className=\"popup__col\">ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__row\">\r\n\t\t\t\t\t<div className=\"popup__col\">Your balance</div>\r\n\t\t\t\t\t<div className=\"popup__col\">8.498 ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__row\">\r\n\t\t\t\t\t<div className=\"popup__col\">Service fee</div>\r\n\t\t\t\t\t<div className=\"popup__col\">0 ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__row\">\r\n\t\t\t\t\t<div className=\"popup__col\">You will pay</div>\r\n\t\t\t\t\t<div className=\"popup__col\">0.007 ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__attention\">\r\n\t\t\t\t  <div className=\"popup__preview\">\r\n\t\t\t\t\t<svg className=\"icon icon-info-circle\">\r\n\t\t\t\t\t  <use xlinkHref=\"#icon-info-circle\"></use>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__details\">\r\n\t\t\t\t\t<div className=\"popup__category\">This creator is not verified</div>\r\n\t\t\t\t\t<div className=\"popup__text\">Purchase this item at your own risk</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__btns\">\r\n\t\t\t\t  <button className=\"button popup__button\">I understand, continue</button>\r\n\t\t\t\t  <button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__item\">\r\n\t\t\t\t<div className=\"popup__title h4\">Folow steps</div>\r\n\t\t\t\t<div className=\"steps\">\r\n\t\t\t\t  <div className=\"steps__item\">\r\n\t\t\t\t\t<div className=\"steps__head\">\r\n\t\t\t\t\t  <div className=\"steps__icon\">\r\n\t\t\t\t\t\t<div className=\"loader-circle\"></div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"steps__details\">\r\n\t\t\t\t\t\t<div className=\"steps__info\">Purchasing</div>\r\n\t\t\t\t\t\t<div className=\"steps__text\">Sending transaction with your wallet</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__attention\">\r\n\t\t\t\t  <div className=\"popup__preview\">\r\n\t\t\t\t\t<svg className=\"icon icon-info-circle\">\r\n\t\t\t\t\t  <use xlinkHref=\"#icon-info-circle\"></use>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__details\">\r\n\t\t\t\t\t<div className=\"popup__category\">This creator is not verified</div>\r\n\t\t\t\t\t<div className=\"popup__text\">Purchase this item at your own risk</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"popup__avatar\"><img src={process.env.SITE_ROOT+\"img/content/avatar-3.jpg\"} alt=\"Avatar\"/></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__btns\">\r\n\t\t\t\t  <button className=\"button popup__button\">I understand, continue</button>\r\n\t\t\t\t  <button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__item\">\r\n\t\t\t\t<div className=\"success\">\r\n\t\t\t\t  <div className=\"success__title h2\">Yay! <span role=\"img\" aria-label=\"firework\">??</span></div>\r\n\t\t\t\t  <div className=\"success__info\">You successfully purchased <span>C O I N Z</span> from UI8</div>\r\n\t\t\t\t  <div className=\"success__table\">\r\n\t\t\t\t\t<div className=\"success__row\">\r\n\t\t\t\t\t  <div className=\"success__col\">Status</div>\r\n\t\t\t\t\t  <div className=\"success__col\">Transaction ID</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"success__row\">\r\n\t\t\t\t\t  <div className=\"success__col\">Processing</div>\r\n\t\t\t\t\t  <div className=\"success__col\">0msx836930...87r398</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"success__stage\">Time to show-off</div>\r\n\t\t\t\t  <div className=\"success__socials\"><a className=\"success__social\" href=\"https://www.facebook.com/ui8.net/\" target=\"_blank\">\r\n\t\t\t\t\t  <svg className=\"icon icon-facebook\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-facebook\"></use>\r\n\t\t\t\t\t  </svg></a><a className=\"success__social\" href=\"https://twitter.com/ui8\" target=\"_blank\">\r\n\t\t\t\t\t  <svg className=\"icon icon-twitter\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-twitter\"></use>\r\n\t\t\t\t\t  </svg></a><a className=\"success__social\" href=\"https://www.instagram.com/ui8net/\" target=\"_blank\">\r\n\t\t\t\t\t  <svg className=\"icon icon-instagram\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-instagram\"></use>\r\n\t\t\t\t\t  </svg></a><a className=\"success__social\" href=\"https://www.pinterest.com/ui8m/\" target=\"_blank\">\r\n\t\t\t\t\t  <svg className=\"icon icon-pinterest\">\r\n\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-pinterest\"></use>\r\n\t\t\t\t\t  </svg></a></div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_accept mfp-hide\" id=\"popup-accept\">\r\n\t\t\t  <div className=\"accept\">\r\n\t\t\t\t<div className=\"accept__line\">\r\n\t\t\t\t  <div className=\"accept__icon\"></div>\r\n\t\t\t\t  <div className=\"accept__text\">You are about to accept a bid for <strong>C O I N Z</strong> from <strong>UI8</strong></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"accept__subtitle\">1.46 ETH for 1 edition</div>\r\n\t\t\t\t<div className=\"accept__table\">\r\n\t\t\t\t  <div className=\"accept__row\">\r\n\t\t\t\t\t<div className=\"accept__col\">Service fee</div>\r\n\t\t\t\t\t<div className=\"accept__col\">0 ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"accept__row\">\r\n\t\t\t\t\t<div className=\"accept__col\">Total bid amount</div>\r\n\t\t\t\t\t<div className=\"accept__col\">1.46 ETH</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button popup__button\">Accept bid</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_sale mfp-hide\" id=\"popup-sale\">\r\n\t\t\t  <div className=\"popup__title h4\">Put on sale</div>\r\n\t\t\t  <div className=\"popup__line\"> \r\n\t\t\t\t<div className=\"popup__icon\">\r\n\t\t\t\t  <svg className=\"icon icon-coin\">\r\n\t\t\t\t\t<use xlinkHref=\"#icon-coin\"></use>\r\n\t\t\t\t  </svg>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__box\">\r\n\t\t\t\t  <div className=\"popup__category\">Instant sale price</div>\r\n\t\t\t\t  <div className=\"popup__text\">Enter the price for which the item will be instanly sold</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t  <input className=\"switch__input\" type=\"checkbox\" checked=\"checked\"/><span className=\"switch__inner\"><span className=\"switch__box\"></span></span>\r\n\t\t\t\t</label>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__table\">\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Enter your price</div>\r\n\t\t\t\t  <div className=\"popup__col\">ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Service fee</div>\r\n\t\t\t\t  <div className=\"popup__col\">1.5%</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Total bid amount</div>\r\n\t\t\t\t  <div className=\"popup__col\">0 ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button popup__button\">Continue</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_price mfp-hide\" id=\"popup-price\">\r\n\t\t\t  <div className=\"popup__title h4\">Change price</div>\r\n\t\t\t  <div className=\"field\">\r\n\t\t\t\t<div className=\"field__label\">new price</div>\r\n\t\t\t\t<div className=\"field__wrap\">\r\n\t\t\t\t  <input className=\"field__input\" name=\"price\" type=\"text\" value=\"1.46\" required />\r\n\t\t\t\t  <div className=\"field__currency\">ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button-purple popup__button js-popup-close\">Change price</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_transfer mfp-hide\" id=\"popup-transfer\">\r\n\t\t\t  <div className=\"popup__title h4\">Transfer token</div>\r\n\t\t\t  <div className=\"popup__note\">You can transfer tokens from your address to another</div>\r\n\t\t\t  <div className=\"popup__subtitle\">Receiver address</div>\r\n\t\t\t  <div className=\"popup__field\">\r\n\t\t\t\t<div className=\"popup__wrap\">\r\n\t\t\t\t  <input className=\"popup__input\" type=\"text\" name=\"address\" placeholder=\"Paste address\" required />\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button popup__button js-popup-close\">Continue</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_remove mfp-hide\" id=\"popup-remove\">\r\n\t\t\t  <div className=\"popup__title h4\">Remove from sale</div>\r\n\t\t\t  <div className=\"popup__note\">Do you really want to remove your item from sale? You can put it on sale anytime</div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button popup__button js-popup-close\">Remove now</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_burn mfp-hide\" id=\"popup-burn\">\r\n\t\t\t  <div className=\"popup__title h4\">Burn token</div>\r\n\t\t\t  <div className=\"popup__note\">Are you sure to burn this token? This action cannot be undone. Token will be transfered to zero address</div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button-purple popup__button js-popup-close\">Continue</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_report mfp-hide\" id=\"popup-report\">\r\n\t\t\t  <div className=\"popup__title h4\">Report</div>\r\n\t\t\t  <div className=\"popup__note\">Describe why you think this item should be removed from marketplace</div>\r\n\t\t\t  <div className=\"field\">\r\n\t\t\t\t<div className=\"field__label\">message</div>\r\n\t\t\t\t<div className=\"field__wrap\">\r\n\t\t\t\t  <textarea className=\"field__textarea\" name=\"message\" placeholder=\"Tell us the details\" required></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\">\r\n\t\t\t\t<button className=\"button-purple popup__button js-popup-close\">Send now</button>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_bid mfp-hide\" id=\"popup-bid\">\r\n\t\t\t  <div className=\"popup__title h4\">Place a bid</div>\r\n\t\t\t  <div className=\"popup__info\">You are about to purchase <strong>C O I N Z</strong> from <strong>UI8</strong></div>\r\n\t\t\t  <div className=\"popup__subtitle\">Your bid</div>\r\n\t\t\t  <div className=\"popup__table\">\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Enter bid</div>\r\n\t\t\t\t  <div className=\"popup__col\">\r\n\t\t\t\t\t<div className=\"popup__bid\">\r\n\t\t\t\t\t  <input className=\"popup__rate\" type=\"tel\" name=\"bid\"/>\r\n\t\t\t\t\t  <div className=\"popup__currency\">ETH</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Your balance</div>\r\n\t\t\t\t  <div className=\"popup__col\">8.498 ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Service fee</div>\r\n\t\t\t\t  <div className=\"popup__col\">0 ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"popup__row\">\r\n\t\t\t\t  <div className=\"popup__col\">Total bid amount</div>\r\n\t\t\t\t  <div className=\"popup__col\">0 ETH</div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"popup__btns\"><a className=\"button popup__button js-popup-open\" href=\"#popup-wallet\" data-effect=\"mfp-zoom-in\">Place a bid</a>\r\n\t\t\t\t<button className=\"button-stroke popup__button js-popup-close\">Cancel</button>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"popup popup_wallet mfp-hide\" id=\"popup-wallet\">\r\n\t\t\t  <div className=\"popup__title h4\">Folow steps</div>\r\n\t\t\t  <div className=\"steps\">\r\n\t\t\t\t<div className=\"steps__item\">\r\n\t\t\t\t  <div className=\"steps__head\">\r\n\t\t\t\t\t<div className=\"steps__icon\">\r\n\t\t\t\t\t  <svg className=\"icon icon-upload-file\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-upload-file\"></use>\r\n\t\t\t\t\t  </svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"steps__details\">\r\n\t\t\t\t\t  <div className=\"steps__info\">Deposit ETH</div>\r\n\t\t\t\t\t  <div className=\"steps__text\">Send transaction with your wallet</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button className=\"button steps__button\">Start now</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"steps__item\">\r\n\t\t\t\t  <div className=\"steps__head\">\r\n\t\t\t\t\t<div className=\"steps__icon\">\r\n\t\t\t\t\t  <svg className=\"icon icon-check\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-check\"></use>\r\n\t\t\t\t\t  </svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"steps__details\">\r\n\t\t\t\t\t  <div className=\"steps__info\">Approve</div>\r\n\t\t\t\t\t  <div className=\"steps__text\">Checking balance and approving</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button className=\"button steps__button disabled\">Start now</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"steps__item\">\r\n\t\t\t\t  <div className=\"steps__head\">\r\n\t\t\t\t\t<div className=\"steps__icon\">\r\n\t\t\t\t\t  <svg className=\"icon icon-pencil\">\r\n\t\t\t\t\t\t<use xlinkHref=\"#icon-pencil\"></use>\r\n\t\t\t\t\t  </svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"steps__details\">\r\n\t\t\t\t\t  <div className=\"steps__info\">Signature</div>\r\n\t\t\t\t\t  <div className=\"steps__text\">Create a signature to place a bit</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button className=\"button steps__button disabled js-popup-close\">Start now</button>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{/* Footer */}\r\n\t\t<div style={{display: \"none\"}}><svg width=\"0\" height=\"0\">\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-search\">\r\n<path d=\"M6.667 1.334c2.945 0 5.333 2.388 5.333 5.333a5.31 5.31 0 0 1-1.12 3.27l3.592 3.592c.26.26.26.682 0 .943s-.682.26-.943 0l-3.591-3.592a5.31 5.31 0 0 1-3.27 1.12c-2.946 0-5.333-2.388-5.333-5.333s2.388-5.333 5.333-5.333zm0 1.333a4 4 0 1 0 0 8 4 4 0 1 0 0-8z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-notification\">\r\n<path d=\"M8.833 12.861c.368 0 .679.313.516.643-.072.146-.169.281-.289.398-.281.276-.663.431-1.061.431s-.779-.155-1.061-.431a1.47 1.47 0 0 1-.289-.398c-.163-.33.148-.643.516-.643h1.667zM8 1.667c2.982 0 5.4 2.382 5.4 5.321v4.106h.011a.59.59 0 0 1 .589.589.59.59 0 0 1-.589.589H2.589A.59.59 0 0 1 2 11.683a.59.59 0 0 1 .589-.589H2.6V6.988c0-2.939 2.418-5.321 5.4-5.321zm0 1.178c-2.32 0-4.2 1.855-4.2 4.142v4.106h8.4V6.988c0-2.288-1.88-4.142-4.2-4.142z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-copy\">\r\n<path d=\"M11.988 9.672c.015.249.276.418.487.285 1.315-.825 2.19-2.288 2.19-3.956a4.67 4.67 0 0 0-4.667-4.667c-1.667 0-3.131.875-3.956 2.19-.133.212.035.472.285.487 2.984.179 5.481 2.679 5.66 5.66zm-1.323.329a4.67 4.67 0 0 1-4.667 4.667 4.67 4.67 0 0 1-4.667-4.667 4.67 4.67 0 0 1 4.667-4.667 4.67 4.67 0 0 1 4.667 4.667z\"></path>\r\n</symbol> \r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-user\">\r\n<path d=\"M8 .668a4 4 0 0 1 4 4c0 1.296-.617 2.449-1.573 3.18 2.104.93 3.573 3.037 3.573 5.487v1.333c0 .368-.298.667-.667.667s-.667-.298-.667-.667v-1.333a4.67 4.67 0 0 0-4.645-4.667H8h0l-.021-.001-.193.006a4.67 4.67 0 0 0-4.453 4.662v1.333c0 .368-.298.667-.667.667S2 15.036 2 14.668v-1.333c0-2.45 1.468-4.557 3.573-5.489C4.617 7.117 4 5.964 4 4.668a4 4 0 0 1 4-4zm0 1.333c-1.473 0-2.667 1.194-2.667 2.667S6.527 7.335 8 7.335s2.667-1.194 2.667-2.667S9.473 2.001 8 2.001z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-image\">\r\n<path d=\"M8.001 1.334a28.06 28.06 0 0 1 3.639.246c1.464.193 2.588 1.317 2.782 2.782.133 1.007.246 2.266.246 3.639a28.05 28.05 0 0 1-.246 3.639c-.193 1.464-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782a28.06 28.06 0 0 1-.246-3.639 28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782a28.06 28.06 0 0 1 3.639-.246zm0 1.333c-1.301 0-2.501.107-3.464.235-.867.114-1.52.768-1.635 1.635-.127.963-.235 2.163-.235 3.464 0 1.055.071 2.043.165 2.892l1.086-1.087a2 2 0 0 1 2.828 0l.114.114c.26.26.682.26.943 0l1.448-1.448a2 2 0 0 1 2.828 0l1.196 1.196-.168 1.718-1.971-1.971c-.26-.26-.682-.26-.943 0l-1.448 1.448a2 2 0 0 1-2.828 0l-.114-.114c-.26-.26-.682-.26-.943 0l-1.605 1.606a1.88 1.88 0 0 0 1.28.745c.963.127 2.163.235 3.464.235a26.72 26.72 0 0 0 3.464-.235c.867-.114 1.52-.768 1.635-1.635.127-.963.235-2.163.235-3.464s-.107-2.501-.235-3.464c-.114-.867-.768-1.52-1.635-1.635-.963-.127-2.163-.235-3.464-.235zm-2.001 2c.736 0 1.333.597 1.333 1.333s-.597 1.333-1.333 1.333-1.333-.597-1.333-1.333.597-1.333 1.333-1.333z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-exit\">\r\n<path d=\"M10.668 1.334c.866 0 1.519.045 2.005.104 1.044.128 1.728.94 1.825 1.92.086.863.169 2.301.169 4.642l-.169 4.642c-.098.98-.781 1.792-1.825 1.92a16.68 16.68 0 0 1-2.005.104 16.68 16.68 0 0 1-2.005-.104c-1.044-.128-1.728-.94-1.825-1.92l-.124-1.951c-.014-.368.273-.677.641-.691s.677.273.691.641l.119 1.869c.043.427.301.685.66.729a15.36 15.36 0 0 0 1.844.094c.821 0 1.419-.042 1.844-.094.36-.044.618-.301.66-.729.08-.806.163-2.198.163-4.51l-.163-4.51c-.043-.428-.301-.685-.66-.729-.424-.052-1.022-.094-1.844-.094s-1.42.042-1.844.094c-.36.044-.618.301-.66.729l-.119 1.869c-.014.368-.323.655-.691.641s-.655-.323-.641-.691l.124-1.951c.098-.98.781-1.792 1.825-1.92.486-.059 1.139-.104 2.005-.104zM4.805 5.196c.26.26.26.682 0 .943L3.61 7.334h6.391c.368 0 .667.298.667.667s-.298.667-.667.667H3.61l1.195 1.195c.26.26.26.682 0 .943s-.682.26-.943 0L1.529 8.472c-.26-.26-.26-.682 0-.943l2.333-2.333c.26-.26.682-.26.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-bulb\">\r\n<path d=\"M7.999 0c2.946 0 5.333 2.388 5.333 5.333 0 1.684-.781 3.186-2 4.164v1.17c0 .591-.256 1.122-.663 1.488L10.668 14a2 2 0 0 1-2 2H7.335a2 2 0 0 1-2-2v-1.841c-.41-.366-.668-.899-.668-1.492v-1.17c-1.219-.977-2-2.479-2-4.164C2.666 2.388 5.054 0 7.999 0zm1.335 12.667l-2.667-.001V14c0 .368.298.667.667.667h1.333c.368 0 .667-.298.667-.667v-1.333h0zM7.999 1.333a4 4 0 0 0-4 4A3.99 3.99 0 0 0 5.5 8.457l.499.4v1.81c0 .368.298.667.667.667h.668V7.609L6.196 6.471c-.26-.26-.26-.682 0-.943s.682-.26.943 0h0L8 6.39l.862-.862c.26-.26.682-.26.943 0s.26.682 0 .943h0L8.667 7.609v3.724h.666c.368 0 .667-.298.667-.667v-1.81l.499-.4a3.99 3.99 0 0 0 1.501-3.123 4 4 0 0 0-4-4z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-arrow-next\">\r\n<path d=\"M10.39 3.765c.464-.375 1.187-.349 1.615.057l3.692 3.5a.91.91 0 0 1 0 1.357l-3.692 3.5c-.428.406-1.151.431-1.615.057s-.493-1.007-.065-1.413L12.247 9H1.143C.512 9 0 8.552 0 8s.512-1 1.143-1h11.104l-1.922-1.822c-.428-.406-.399-1.038.065-1.413z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-arrow-prev\">\r\n<path d=\"M5.61 12.235c-.464.375-1.187.349-1.615-.057l-3.692-3.5a.91.91 0 0 1 0-1.357l3.692-3.5c.428-.406 1.151-.431 1.615-.057s.493 1.007.065 1.413L3.753 7h11.104C15.488 7 16 7.448 16 8s-.512 1-1.143 1H3.753l1.922 1.822c.428.406.399 1.038-.065 1.413z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-arrow-bottom\">\r\n<path d=\"M15.039 3.961c-.653-.653-1.713-.653-2.366 0L8 8.634 3.327 3.961c-.653-.653-1.713-.653-2.366 0s-.653 1.713 0 2.366l5.856 5.856c.653.653 1.713.653 2.366 0l5.856-5.856c.653-.653.653-1.713 0-2.366z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-stop\">\r\n<path d=\"M8 1.333a28.06 28.06 0 0 1 3.639.246c1.465.193 2.588 1.317 2.782 2.782.133 1.007.246 2.266.246 3.639s-.113 2.632-.246 3.639c-.193 1.465-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782A28.06 28.06 0 0 1 1.333 8a28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782A28.06 28.06 0 0 1 8 1.333zm0 1.333c-1.301 0-2.501.107-3.464.235-.867.114-1.52.768-1.635 1.635A26.73 26.73 0 0 0 2.667 8c0 1.301.107 2.501.235 3.464.114.867.768 1.52 1.635 1.635.963.127 2.163.235 3.464.235s2.501-.107 3.464-.235c.867-.114 1.52-.768 1.635-1.635.127-.963.235-2.163.235-3.464s-.107-2.501-.235-3.464c-.114-.867-.768-1.52-1.635-1.635A26.73 26.73 0 0 0 8 2.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-play\">\r\n<path d=\"M1.8 2.923c0-1.567 1.72-2.525 3.053-1.701l8.2 5.076a2 2 0 0 1 0 3.401l-8.2 5.076c-1.332.825-3.053-.134-3.053-1.701V2.923z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-full-screen\">\r\n<path d=\"M8 1.333a28.06 28.06 0 0 1 3.639.246c1.465.193 2.588 1.317 2.782 2.782.133 1.007.246 2.266.246 3.639s-.113 2.632-.246 3.639c-.193 1.465-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782A28.06 28.06 0 0 1 1.333 8a28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782A28.06 28.06 0 0 1 8 1.333zm-4.667 8c-.368 0-.667.298-.667.667h0v1.333a2 2 0 0 0 2 2h0H6c.368 0 .667-.298.667-.667S6.368 12 6 12h0-1.333C4.298 12 4 11.701 4 11.333h0V10c0-.368-.298-.667-.667-.667zm9.333 0c-.368 0-.667.298-.667.667h0v1.333c0 .368-.298.667-.667.667h0H10c-.368 0-.667.298-.667.667s.298.667.667.667h0 1.333a2 2 0 0 0 2-2h0V10c0-.368-.298-.667-.667-.667zM6 2.666H4.666a2 2 0 0 0-2 2V6c0 .368.298.667.667.667S4 6.368 4 6V4.666C4 4.298 4.298 4 4.666 4H6c.368 0 .667-.298.667-.667S6.368 2.666 6 2.666zm5.333 0H10c-.368 0-.667.298-.667.667S9.631 4 10 4h1.333c.368 0 .667.298.667.667V6c0 .368.298.667.667.667s.667-.298.667-.667V4.666a2 2 0 0 0-2-2z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-volume\">\r\n<path d=\"M10.667 2.667c-.368 0-.667.298-.667.667s.298.667.667.667a4 4 0 1 1 0 8c-.368 0-.667.298-.667.667s.298.667.667.667C13.612 13.334 16 10.946 16 8s-2.388-5.333-5.333-5.333zm0 2.667c-.368 0-.667.298-.667.667s.298.667.667.667A1.33 1.33 0 0 1 12 8c0 .736-.597 1.333-1.333 1.333-.368 0-.667.298-.667.667s.298.667.667.667A2.67 2.67 0 0 0 13.334 8a2.67 2.67 0 0 0-2.667-2.667zM3.333 6l3.088-2.895c.852-.798 2.245-.195 2.245.973v7.845c0 1.167-1.394 1.771-2.245.973L3.333 10h-2C.597 10 0 9.403 0 8.667V7.334C0 6.597.597 6 1.333 6h2z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-arrow-expand\">\r\n<path d=\"M11.281 9.207a.75.75 0 0 0 .719-.779l-.143-3.567a.75.75 0 0 0-.719-.719l-3.567-.143a.75.75 0 0 0-.779.719.75.75 0 0 0 .719.779l1.856.074-5.148 5.148a.75.75 0 0 0 0 1.06.75.75 0 0 0 1.06 0l5.148-5.148.074 1.856a.75.75 0 0 0 .779.719z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-add-square\">\r\n<path d=\"M8 1.333a28.06 28.06 0 0 1 3.639.246c1.465.193 2.588 1.317 2.782 2.782.133 1.007.246 2.266.246 3.639s-.113 2.632-.246 3.639c-.193 1.465-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782A28.06 28.06 0 0 1 1.333 8a28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782A28.06 28.06 0 0 1 8 1.333zm0 1.333c-1.301 0-2.501.107-3.464.235-.867.114-1.52.768-1.635 1.635-.127.963-.235 2.163-.235 3.464s.107 2.501.235 3.464c.114.867.768 1.52 1.635 1.635.963.127 2.163.235 3.464.235s2.501-.107 3.464-.235c.867-.114 1.52-.768 1.635-1.635.127-.963.235-2.163.235-3.464s-.107-2.501-.235-3.464c-.114-.867-.768-1.52-1.635-1.635A26.73 26.73 0 0 0 8 2.666zm0 2c.368 0 .667.298.667.667h0v2h2c.368 0 .667.298.667.667s-.298.667-.667.667h0-2v2c0 .368-.298.667-.667.667s-.667-.298-.667-.667h0v-2h-2c-.368 0-.667-.298-.667-.667s.298-.667.667-.667h0 2v-2c0-.368.298-.667.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-scatter-up\">\r\n<path d=\"M13.334 12.667c.368 0 .667.298.667.667s-.299.667-.667.667-.667-.298-.667-.667.298-.667.667-.667zm-5.333 0c.368 0 .667.298.667.667S8.369 14 8 14s-.667-.298-.667-.667.298-.667.667-.667zm-5.333 0c.368 0 .667.298.667.667S3.035 14 2.667 14 2 13.702 2 13.334s.298-.667.667-.667zM13.334 10c.368 0 .667.298.667.667s-.299.667-.667.667-.667-.299-.667-.667.298-.667.667-.667zM8 10c.368 0 .667.298.667.667s-.298.667-.667.667-.667-.299-.667-.667S7.632 10 8 10zM2.667 7.333a2 2 0 0 1 0 4 2 2 0 0 1-2-2 2 2 0 0 1 2-2zm0 1.333c-.368 0-.667.298-.667.667s.298.667.667.667.667-.298.667-.667-.298-.667-.667-.667zm10.667-1.333c.368 0 .667.298.667.667s-.299.667-.667.667-.667-.298-.667-.667.298-.667.667-.667zM8 4.667a2 2 0 1 1 0 4 2 2 0 1 1 0-4zM8 6c-.368 0-.667.298-.667.667s.298.667.667.667.667-.298.667-.667S8.369 6 8 6zm5.333-4a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm0 1.333c-.368 0-.667.298-.667.667s.299.667.667.667S14 4.368 14 4s-.298-.667-.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-heart\">\r\n<path d=\"M11 2.112c2.393 0 4.333 1.94 4.333 4.333 0 4.245-4.647 6.59-6.542 7.37-.511.21-1.071.21-1.582 0-1.896-.78-6.543-3.124-6.543-7.37 0-2.393 1.94-4.333 4.333-4.333a4.32 4.32 0 0 1 3 1.206 4.32 4.32 0 0 1 3-1.206zm0 1.333c-.807 0-1.537.317-2.077.835l-.462.443c-.258.248-.665.248-.923 0l-.462-.443c-.54-.518-1.27-.835-2.077-.835a3 3 0 0 0-3 3c0 1.588.86 2.9 2.101 3.978s2.728 1.794 3.615 2.159a.73.73 0 0 0 .567 0c.888-.365 2.373-1.08 3.615-2.159S14 8.034 14 6.445a3 3 0 0 0-3-3z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-heart-fill\">\r\n<path d=\"M8 3.339a4.32 4.32 0 0 0-3-1.206c-2.393 0-4.333 1.94-4.333 4.333 0 4.246 4.647 6.59 6.543 7.37.511.21 1.071.21 1.582 0 1.896-.78 6.543-3.124 6.543-7.37 0-2.393-1.94-4.333-4.333-4.333a4.32 4.32 0 0 0-3 1.206z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-candlesticks-up\">\r\n<path d=\"M4.667 2.667c.368 0 .667.298.667.667v4.781A2 2 0 0 1 6.667 10v1.333a2 2 0 0 1-1.333 1.886v2.114c0 .368-.298.667-.667.667S4 15.702 4 15.333v-2.114a2 2 0 0 1-1.333-1.886V10A2 2 0 0 1 4 8.114V3.333c0-.368.298-.667.667-.667zM11.334 0c.368 0 .667.298.667.667l.001.781a2 2 0 0 1 1.333 1.886v4a2 2 0 0 1-1.333 1.886L12 12.667c0 .368-.298.667-.667.667s-.667-.298-.667-.667l-.001-3.448a2 2 0 0 1-1.333-1.886v-4a2 2 0 0 1 1.333-1.886l.001-.781c0-.368.298-.667.667-.667zM4.667 9.333c-.335 0-.612.247-.659.568L4 10v1.333c0 .368.298.667.667.667.335 0 .612-.247.659-.568l.007-.099V10c0-.368-.298-.667-.667-.667zm6.667-6.667c-.335 0-.612.247-.659.568l-.007.099v4c0 .368.298.667.667.667.335 0 .612-.247.659-.568L12 7.333v-4c0-.368-.298-.667-.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-close\">\r\n<path d=\"M.335.335c.446-.446 1.17-.446 1.616 0L8 6.384 14.049.335c.446-.446 1.17-.446 1.616 0s.446 1.17 0 1.616L9.616 8l6.049 6.049c.446.446.446 1.17 0 1.616s-1.17.446-1.616 0L8 9.616l-6.049 6.049c-.446.446-1.17.446-1.616 0s-.446-1.17 0-1.616L6.384 8 .335 1.951c-.446-.446-.446-1.17 0-1.616\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-upload-file\">\r\n<path d=\"M10.229.667c.707 0 1.386.281 1.886.781l1.105 1.105c.5.5.781 1.178.781 1.886v8.229c0 1.473-1.194 2.667-2.667 2.667H4.667C3.194 15.334 2 14.14 2 12.667V3.334C2 1.861 3.194.667 4.667.667h5.562zM9.333 2H4.667c-.693 0-1.263.529-1.327 1.205l-.006.128v9.333c0 .693.529 1.263 1.205 1.327l.128.006h6.667c.693 0 1.263-.529 1.327-1.205l.006-.128V5.334h-1.333a2 2 0 0 1-1.995-1.851l-.005-.149V2zM7.745 6.051c.242-.1.53-.052.727.145h0l2 2c.26.26.26.682 0 .943s-.682.26-.943 0h0l-.862-.862v3.057c0 .368-.298.667-.667.667s-.667-.298-.667-.667h0V8.276l-.862.862c-.26.26-.682.26-.943 0s-.26-.682 0-.943h0l2-2c.064-.064.138-.112.216-.145zm2.922-3.977v1.259c0 .368.298.667.667.667h1.259c-.065-.188-.173-.361-.317-.505l-1.105-1.105c-.144-.144-.317-.251-.505-.317z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-plus\">\r\n<path d=\"M8.667 4.667C8.667 4.298 8.368 4 8 4s-.667.298-.667.667v2.667H4.667C4.298 7.333 4 7.632 4 8s.298.667.667.667h2.667v2.667c0 .368.298.667.667.667s.667-.298.667-.667V8.667h2.667c.368 0 .667-.298.667-.667s-.298-.667-.667-.667H8.667V4.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-circle-close\">\r\n<path d=\"M8 1.333A6.67 6.67 0 0 1 14.666 8 6.67 6.67 0 0 1 8 14.666 6.67 6.67 0 0 1 1.333 8 6.67 6.67 0 0 1 8 1.333zm0 1.333C5.054 2.666 2.666 5.054 2.666 8S5.054 13.333 8 13.333 13.333 10.945 13.333 8 10.945 2.666 8 2.666zm2.471 2.862c.26.26.26.682 0 .943L8.942 8l1.529 1.529c.26.26.26.682 0 .943s-.682.26-.943 0L8 8.942l-1.529 1.529c-.26.26-.682.26-.943 0s-.26-.682 0-.943L7.057 8 5.528 6.471c-.26-.26-.26-.682 0-.943s.682-.26.943 0L8 7.057l1.529-1.529c.26-.26.682-.26.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-wallet\">\r\n<path d=\"M12.667 2c1.416 0 2.574 1.104 2.661 2.498l.005.169v6.667c0 1.416-1.104 2.574-2.498 2.661l-.169.005H3.334C1.918 14 .759 12.896.672 11.502l-.005-.169V4.667c0-1.416 1.104-2.574 2.498-2.661L3.334 2h9.333zm0 1.333H3.334C2.597 3.333 2 3.93 2 4.667v6.667c0 .736.597 1.333 1.333 1.333h9.333c.736 0 1.333-.597 1.333-1.333h-2c-1.841 0-3.333-1.492-3.333-3.333S10.159 4.667 12 4.667h2c0-.736-.597-1.333-1.333-1.333zM14 6h-2a2 2 0 1 0 0 4h2V6zm-2 1.333c.368 0 .667.298.667.667s-.298.667-.667.667-.667-.298-.667-.667.298-.667.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-check\">\r\n<path d=\"M15.665 2.668c.446.446.446 1.17 0 1.616l-9.143 9.143c-.446.446-1.17.446-1.616 0L.335 8.855c-.446-.446-.446-1.17 0-1.616s1.17-.446 1.616 0l3.763 3.763 8.335-8.335c.446-.446 1.17-.446 1.616 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-circle-and-square\">\r\n<path d=\"M13.334 5.334c.736 0 1.333.597 1.333 1.333v6.667c0 .736-.597 1.333-1.333 1.333H6.667c-.736 0-1.333-.597-1.333-1.333v-.998a.35.35 0 0 1 .371-.343l.296.007a6 6 0 0 0 6-6l-.007-.296a.35.35 0 0 1 .343-.371h.998zm-7.333-4a4.67 4.67 0 0 1 4.667 4.667 4.67 4.67 0 0 1-4.667 4.667 4.67 4.67 0 0 1-4.667-4.667 4.67 4.67 0 0 1 4.667-4.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-pen\">\r\n<path d=\"M14.11 9.444c.491.491.491 1.287 0 1.778l-2.889 2.889c-.491.491-1.287.491-1.778 0a.63.63 0 0 1 0-.889l3.778-3.778a.63.63 0 0 1 .889 0zM3.027 1.584l.067.001 5.43.776a4 4 0 0 1 3.059 2.268h0l1.22 2.615c.118.254.066.555-.133.753h0L7.997 12.67c-.198.198-.499.251-.753.133h0l-2.615-1.22a4 4 0 0 1-2.268-3.059h0l-.776-5.43c-.034-.237.243-.323.412-.153h0l3.912 3.912c.084.084.114.207.1.325-.006.051-.009.104-.009.157 0 .736.597 1.333 1.333 1.333s1.333-.597 1.333-1.333S8.07 6 7.333 6a1.35 1.35 0 0 0-.157.009.39.39 0 0 1-.325-.1h0L2.94 1.997c-.169-.169-.084-.446.153-.412z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-lightning\">\r\n<path d=\"M2.764 8.943L9.002.307a.67.67 0 0 1 1.198.5L9.334 6h3.363a.67.67 0 0 1 .54 1.057L7 15.694a.67.67 0 0 1-1.198-.5L6.668 10H3.305a.67.67 0 0 1-.54-1.057z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-home\">\r\n<path d=\"M13.333 12.534V5.978l.99.594c.316.189.725.087.915-.229s.087-.725-.229-.915L11.661 3.42 9.1 1.877h0l-.45-.263-.086-.044c-.101-.049-.188-.082-.278-.102-.189-.042-.385-.042-.574 0-.09.02-.178.053-.279.102l-.084.043-.451.263h0L4.334 3.422.99 5.429c-.316.189-.418.599-.229.915s.599.418.915.229l.99-.594v6.556c0 .747 0 1.12.145 1.405.128.251.332.455.583.583.285.145.659.145 1.405.145h1.2v-4a2 2 0 0 1 4 0v4h1.2c.747 0 1.12 0 1.405-.145.251-.128.455-.332.583-.583.145-.285.145-.659.145-1.405z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-close-circle-fill\">\r\n<path d=\"M8 1.333A6.67 6.67 0 0 1 14.666 8 6.67 6.67 0 0 1 8 14.666 6.67 6.67 0 0 1 1.333 8 6.67 6.67 0 0 1 8 1.333zm1.529 4.195L8 7.057 6.471 5.528c-.26-.26-.682-.26-.943 0s-.26.682 0 .943L7.057 8 5.528 9.528c-.26.26-.26.682 0 .943s.682.26.943 0L8 8.942l1.529 1.529c.26.26.682.26.943 0s.26-.682 0-.943L8.942 8l1.529-1.529c.26-.26.26-.682 0-.943s-.682-.26-.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-edit\">\r\n<path d=\"M13.283 14c.368 0 .667.298.667.667s-.299.667-.667.667H2.617c-.368 0-.667-.298-.667-.667S2.248 14 2.617 14h10.667zM12.031 1.138l1.448 1.448a2 2 0 0 1 0 2.828l-6.862 6.862c-.25.25-.589.39-.943.39H3.283c-.736 0-1.333-.597-1.333-1.333V8.943c0-.354.14-.693.391-.943l6.862-6.862a2 2 0 0 1 2.828 0zM3.617 8.609l-.333.333v2.391h2.391L6.007 11l-2.391-2.39zm5-5L4.56 7.666l2.391 2.39L11.007 6 8.617 3.609zm1.529-1.529l-.586.586 2.39 2.391.586-.586c.26-.26.26-.682 0-.943l-1.448-1.448c-.26-.26-.682-.26-.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-globe\">\r\n<path d=\"M8.001 1.334a6.67 6.67 0 0 1 6.631 5.971l.003.029.033.667a6.67 6.67 0 0 1-6.667 6.667h-.003l-.231-.004a6.67 6.67 0 0 1-6.4-5.996l-.033-.667c0-.225.011-.447.033-.667h0a6.67 6.67 0 0 1 6.632-6h0 .002zm1.98 7.334H6.018c.077 1.396.391 2.599.817 3.451.532 1.065 1.021 1.216 1.164 1.216s.632-.151 1.164-1.216c.426-.852.74-2.055.817-3.451zm3.312 0h-1.977c-.081 1.623-.452 3.075-1.009 4.144a5.34 5.34 0 0 0 2.986-4.144zm-8.61 0H2.709c.228 1.83 1.384 3.373 2.982 4.142-.557-1.069-.928-2.519-1.008-4.141zM5.69 3.192l-.141.07c-1.525.79-2.619 2.295-2.841 4.07h1.974c.081-1.622.452-3.073 1.008-4.141zm2.309-.525c-.143 0-.632.151-1.164 1.216-.426.852-.74 2.055-.817 3.451h3.963c-.077-1.396-.391-2.599-.817-3.451-.532-1.065-1.021-1.216-1.164-1.216zm2.308.523l.049.096c.529 1.059.882 2.472.96 4.047h1.976c-.229-1.831-1.386-3.374-2.985-4.142z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-share\">\r\n<path d=\"M10.702 6.063l1.279.098c.99.104 1.779.806 1.898 1.843.068.591.122 1.444.122 2.663l-.122 2.663c-.118 1.036-.906 1.739-1.896 1.843-.787.083-2.042.161-3.982.161s-3.195-.078-3.982-.161c-.99-.104-1.778-.807-1.896-1.843C2.054 12.739 2 11.886 2 10.667l.122-2.663c.119-1.037.908-1.739 1.897-1.843l1.279-.098c.368-.02.682.263.701.63s-.263.682-.63.701l-1.21.092c-.417.044-.671.3-.713.669-.06.529-.113 1.33-.113 2.511l.113 2.511c.042.369.295.625.711.669C4.887 13.924 6.093 14 8 14l3.842-.154c.416-.044.669-.299.711-.669.06-.529.113-1.33.113-2.511l-.113-2.511c-.042-.369-.296-.625-.713-.669l-1.21-.092c-.368-.02-.65-.334-.63-.701s.334-.65.701-.63zM8.471.862l2.333 2.333c.26.26.26.682 0 .943s-.682.26-.943 0L8.667 2.943v6.391c0 .368-.298.667-.667.667s-.667-.298-.667-.667V2.943L6.138 4.138c-.26.26-.682.26-.943 0s-.26-.682 0-.943L7.529.862c.26-.26.682-.26.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-more\">\r\n<path d=\"M3.333 6.667A1.34 1.34 0 0 1 4.667 8a1.34 1.34 0 0 1-1.333 1.333A1.34 1.34 0 0 1 2 8a1.34 1.34 0 0 1 1.333-1.333zm9.333 0A1.34 1.34 0 0 1 14 8a1.34 1.34 0 0 1-1.333 1.333A1.34 1.34 0 0 1 11.333 8a1.34 1.34 0 0 1 1.333-1.333zM8 6.667A1.34 1.34 0 0 1 9.333 8 1.34 1.34 0 0 1 8 9.334 1.34 1.34 0 0 1 6.667 8 1.34 1.34 0 0 1 8 6.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-instagram\">\r\n<path d=\"M10.666 1.333a4 4 0 0 1 3.995 3.8l.005.2v5.333a4 4 0 0 1-3.8 3.995l-.2.005H5.333a4 4 0 0 1-3.995-3.8l-.005-.2V5.333a4 4 0 0 1 3.8-3.995l.2-.005h5.333zm0 1.333H5.333c-1.473 0-2.667 1.194-2.667 2.667v5.333c0 1.473 1.194 2.667 2.667 2.667h5.333c1.473 0 2.667-1.194 2.667-2.667V5.333c0-1.473-1.194-2.667-2.667-2.667zm-2.666 2c1.841 0 3.333 1.492 3.333 3.333s-1.492 3.333-3.333 3.333S4.667 9.841 4.667 8 6.16 4.667 8.001 4.667zm0 1.333a2 2 0 1 0 0 4 2 2 0 1 0 0-4zm3.333-2c.368 0 .667.298.667.667s-.298.667-.667.667-.667-.298-.667-.667.298-.667.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-facebook\">\r\n<path d=\"M8 1.333A6.67 6.67 0 0 1 14.666 8 6.67 6.67 0 0 1 8 14.666 6.67 6.67 0 0 1 1.333 8 6.67 6.67 0 0 1 8 1.333zm0 1.333C5.054 2.666 2.666 5.054 2.666 8c0 2.485 1.699 4.573 3.999 5.165V9.333H6c-.368 0-.667-.298-.667-.667S5.631 8 6 8h0 .667V6.667a2 2 0 0 1 2-2h0 .667c.368 0 .667.298.667.667S9.701 6 9.333 6h0-.667C8.298 6 8 6.298 8 6.667h0V8h1.333c.368 0 .667.298.667.667s-.298.667-.667.667h0H8v4h0c2.946 0 5.333-2.388 5.333-5.333S10.945 2.666 8 2.666z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-twitter\">\r\n<path d=\"M10.334 2c.508 0 1.057.117 1.511.265.233.076.505.181.768.32h0l.993-.198c1.142-.228 2.048.957 1.527 1.999h0l-.751 1.503C14.893 10.281 11.23 14 6.667 14c-2.945 0-4.709-1.094-5.681-2.456-.679-.952.032-2.208 1.135-2.211l.151-.001a6.57 6.57 0 0 1-.754-1.324c-.578-1.36-.755-3.042-.111-4.462.457-1.007 1.757-1.065 2.371-.29.366.462 1.015.989 1.817 1.404.354.183.715.333 1.069.445.038-.249.096-.508.185-.766.191-.561.54-1.171 1.159-1.635C8.633 2.234 9.421 2 10.334 2zm0 1.333c-2.723 0-2.425 2.747-2.347 3.254.006.042-.025.08-.067.079-1.939-.034-4.167-1.294-5.187-2.581-.031-.039-.091-.033-.112.012-.892 1.968.364 5.117 2.575 5.86.054.018.065.09.016.119-.948.555-2.386.588-3.087.59-.053 0-.084.059-.054.103.689.965 2.02 1.898 4.596 1.898 3.992 0 6.988-3.32 6.337-6.978-.002-.014 0-.029.006-.042h0l.929-1.858c.025-.05-.018-.106-.073-.095h0l-1.498.3a.07.07 0 0 1-.061-.017c-.356-.325-1.324-.642-1.974-.642z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-pinterest\">\r\n<path d=\"M8 1.333A6.67 6.67 0 0 1 14.666 8 6.67 6.67 0 0 1 8 14.666 6.67 6.67 0 0 1 1.333 8 6.67 6.67 0 0 1 8 1.333zm0 1.333C5.054 2.666 2.666 5.054 2.666 8c0 2.151 1.274 4.005 3.109 4.849l.702-2.524.88-3.17c.099-.355.466-.562.821-.464s.562.466.464.821l-.702 2.526c.834.177 1.419.026 1.811-.233.495-.327.813-.914.893-1.61s-.091-1.428-.481-1.969c-.375-.522-.969-.892-1.831-.892-1.281 0-2.043.554-2.415 1.236-.387.71-.4 1.645.011 2.466.165.329.031.73-.298.894s-.73.031-.894-.298c-.589-1.179-.602-2.577.011-3.701C5.376 4.779 6.614 4 8.333 4c1.305 0 2.295.588 2.913 1.446.604.839.836 1.909.723 2.9s-.585 1.977-1.483 2.57c-.766.506-1.752.668-2.903.407l-.535 1.925c.309.056.627.085.951.085 2.946 0 5.333-2.388 5.333-5.333S10.945 2.666 8 2.666z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-info-circle\">\r\n<path d=\"M8 1.334a6.67 6.67 0 0 1 6.667 6.667A6.67 6.67 0 0 1 8 14.667a6.67 6.67 0 0 1-6.667-6.667A6.67 6.67 0 0 1 8 1.334zm0 1.333c-2.946 0-5.333 2.388-5.333 5.333S5.054 13.334 8 13.334s5.333-2.388 5.333-5.333S10.945 2.667 8 2.667zm0 4.667c.368 0 .667.298.667.667h0v2.667c0 .368-.298.667-.667.667s-.667-.298-.667-.667h0V8.001c0-.368.298-.667.667-.667zm0-2.667c.368 0 .667.298.667.667s-.298.667-.667.667-.667-.298-.667-.667.298-.667.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-coin\">\r\n<path d=\"M8 1.334a6.67 6.67 0 0 1 6.667 6.667A6.67 6.67 0 0 1 8 14.667a6.67 6.67 0 0 1-6.667-6.667A6.67 6.67 0 0 1 8 1.334zm0 1.333c-2.946 0-5.333 2.388-5.333 5.333S5.054 13.334 8 13.334s5.333-2.388 5.333-5.333S10.945 2.667 8 2.667zm0 1.333c.368 0 .667.298.667.667a2 2 0 0 1 2 2c0 .368-.298.667-.667.667s-.667-.298-.667-.667-.298-.667-.667-.667H7.162c-.274 0-.496.222-.496.496 0 .213.137.403.339.47l2.411.804a1.83 1.83 0 0 1-.578 3.564h-.171c0 .368-.298.667-.667.667s-.667-.298-.667-.667a2 2 0 0 1-2-2c0-.368.298-.667.667-.667s.667.298.667.667.298.667.667.667h1.504c.274 0 .496-.222.496-.496 0-.213-.136-.403-.339-.47l-2.411-.804a1.83 1.83 0 0 1 .578-3.564h.171c0-.368.298-.667.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-close-circle\">\r\n<path d=\"M8 1.334a6.67 6.67 0 0 1 6.667 6.667A6.67 6.67 0 0 1 8 14.667a6.67 6.67 0 0 1-6.667-6.667A6.67 6.67 0 0 1 8 1.334zm0 1.333c-2.946 0-5.333 2.388-5.333 5.333S5.054 13.334 8 13.334s5.333-2.388 5.333-5.333S10.945 2.667 8 2.667zm2.471 2.862c.26.26.26.682 0 .943L8.943 8.001l1.529 1.529c.26.26.26.682 0 .943s-.682.26-.943 0L8 8.943l-1.529 1.529c-.26.26-.682.26-.943 0s-.26-.682 0-.943l1.529-1.529-1.529-1.529c-.26-.26-.26-.682 0-.943s.682-.26.943 0L8 7.058l1.529-1.529c.26-.26.682-.26.943 0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-arrow-right-square\">\r\n<path d=\"M8 1.334c1.373 0 2.632.113 3.639.246 1.465.193 2.588 1.317 2.782 2.782a28.06 28.06 0 0 1 .246 3.639c0 1.372-.113 2.632-.246 3.639-.193 1.464-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782a28.06 28.06 0 0 1-.246-3.639 28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782A28.06 28.06 0 0 1 8 1.334zm0 1.333c-1.301 0-2.501.107-3.464.235-.867.114-1.52.768-1.635 1.635-.127.963-.235 2.163-.235 3.464s.107 2.501.235 3.464c.114.867.768 1.52 1.635 1.635.963.127 2.163.235 3.464.235s2.501-.107 3.464-.235c.867-.114 1.52-.768 1.635-1.635.127-.963.234-2.163.234-3.464a26.74 26.74 0 0 0-.234-3.464c-.114-.867-.768-1.52-1.635-1.635-.963-.127-2.163-.235-3.464-.235zM6.529 5.196c.26-.26.682-.26.943 0h0l2.333 2.333c.26.26.26.682 0 .943h0l-2.333 2.333c-.26.26-.682.26-.943 0s-.26-.682 0-.943h0l1.862-1.862-1.862-1.862c-.26-.26-.26-.682 0-.943z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-bag\">\r\n<path d=\"M8 1.333c1.612 0 2.957 1.145 3.267 2.666l.562.001a2.67 2.67 0 0 1 2.667 2.669l-.005.164-.333 5.333c-.084 1.349-1.162 2.412-2.494 2.495l-.168.005h-6.99c-1.352 0-2.48-1.009-2.646-2.333l-.016-.167-.333-5.333a2.67 2.67 0 0 1 2.498-2.828L4.172 4l.561-.001C5.042 2.478 6.387 1.333 8 1.333zm3.828 4h-.495V6c0 .368-.298.667-.667.667S10 6.368 10 6l-.001-.667h-4L6 6c0 .368-.298.667-.667.667S4.666 6.368 4.666 6v-.667h-.494c-.769 0-1.379.649-1.331 1.417l.333 5.333c.044.703.627 1.25 1.331 1.25h6.99c.704 0 1.287-.547 1.331-1.25l.333-5.333c.048-.768-.562-1.417-1.331-1.417zM8 2.666a2 2 0 0 0-1.886 1.333h3.772A2 2 0 0 0 8 2.666z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-pencil\">\r\n<path d=\"M12.885 2.219l.895.895c1.041 1.041 1.041 2.73 0 3.771l-6.565 6.565c-.359.359-.812.608-1.307.718l-2.174.483a2 2 0 0 1-2.386-2.386l.483-2.174c.11-.495.359-.948.718-1.307l6.565-6.565c1.041-1.041 2.73-1.041 3.771 0zM3.471 9.748c-.168.176-.286.395-.338.633l-.483 2.174c-.106.476.319.901.795.795l2.174-.483c.238-.053.457-.17.633-.338L3.471 9.748zm4.666-4.667L4.414 8.805l2.781 2.781 3.724-3.724-2.781-2.781zm3.805-1.919c-.521-.521-1.365-.521-1.886 0h0l-.976.976 2.781 2.781.976-.976c.521-.521.521-1.365 0-1.886h0z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-filter\">\r\n<path d=\"M12.263 1.333c1.597 0 2.55 1.78 1.664 3.109h0l-3.148 4.723c-.073.109-.112.238-.112.37h0v2.69a2 2 0 0 1-.94 1.696h0l-1.333.833c-1.332.833-3.06-.125-3.06-1.696h0V9.535c0-.132-.039-.26-.112-.37h0L2.073 4.442c-.886-1.329.067-3.109 1.664-3.109h0zm0 1.333H3.737a.67.67 0 0 0-.555 1.036l3.372 5.059c.073.11.112.238.112.37v3.927a.67.67 0 0 0 1.02.565l1.333-.833c.195-.122.313-.336.313-.565V9.131c0-.132.039-.26.112-.37l3.372-5.059a.67.67 0 0 0-.555-1.036z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-plus-circle\">\r\n<path d=\"M8.001 1.333A6.67 6.67 0 0 1 14.667 8a6.67 6.67 0 0 1-6.667 6.667A6.67 6.67 0 0 1 1.334 8a6.67 6.67 0 0 1 6.667-6.667zm0 2A4.67 4.67 0 0 0 3.334 8a4.67 4.67 0 0 0 4.667 4.667A4.67 4.67 0 0 0 12.667 8a4.67 4.67 0 0 0-4.667-4.667zm0 .333a1 1 0 0 1 1 1V7h2.333a1 1 0 1 1 0 2H9.001v2.333a1 1 0 1 1-2 0V9H4.667a1 1 0 1 1 0-2h2.333V4.666a1 1 0 0 1 1-1z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-minus-square\">\r\n<path d=\"M8 1.333a28.06 28.06 0 0 1 3.639.246c1.465.193 2.588 1.317 2.782 2.782.133 1.007.246 2.266.246 3.639s-.113 2.632-.246 3.639c-.193 1.465-1.317 2.588-2.782 2.782-1.007.133-2.266.246-3.639.246s-2.632-.113-3.639-.246c-1.465-.193-2.588-1.317-2.782-2.782A28.06 28.06 0 0 1 1.333 8a28.06 28.06 0 0 1 .246-3.639c.193-1.465 1.317-2.588 2.782-2.782A28.06 28.06 0 0 1 8 1.333zm2.667 6H5.333c-.368 0-.667.298-.667.667s.298.667.667.667h5.333c.368 0 .667-.298.667-.667s-.298-.667-.667-.667z\"></path>\r\n</symbol>\r\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"icon-report\">\r\n<path d=\"M3.411 0c.368 0 .667.298.667.667v.666h7.768c1.097 0 1.707 1.239 1.089 2.103l-.077.098L10.744 6l2.113 2.466c.714.833.17 2.103-.888 2.196l-.124.005-7.768-.001v4.667c0 .335-.247.612-.568.659L3.411 16c-.368 0-.667-.298-.667-.667V.667c0-.335.247-.612.568-.659L3.411 0zm8.434 2.667H4.077v6.667h7.768L8.988 6l2.857-3.333z\"></path>\r\n</symbol>\r\n</svg>\r\n    </div>\t\t\r\n\t</div>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","export default __webpack_public_path__ + \"static/show-1bfcf70a45822644c6193d6bf1dc61b7.svg\";"],"names":["secrets","PROJECT_ID","Loader","load","this","_wasm","fromHex","hex","Buffer","toHex","bytes","toString","toBytesNum","num","split","map","d","join","fromAscii","assetsToValue","assets","multiAsset","lovelace","find","asset","unit","Set","filter","slice","forEach","policy","policyAssets","assetsValue","insert","quantity","value","length","set_multiasset","getTradeDetails","datum","tradeDetails","as_constr_plutus_data","data","get","tradeOwner","as_bytes","budId","requestedAmount","as_integer","as_u64","lovelacePercentage","amount","p","checked_mul","checked_div","BigInt","window","protocolParameters","CoinSelection","setProtocolParameters","minUTxO","minFeeA","minFeeB","maxTxSize","randomImprove","inputs","outputs","limit","preset","Error","_minUTxOValue","len","i","addAmounts","output","utxoSelection","selection","remaining","subset","mergedOutputsAmounts","compiledAmountList","mergeOutputsAmounts","splitOutputsAmounts","amounts","splitAmounts","multiasset","mA","keys","scriptHash","j","_assets","assetName","to_bytes","_multiasset","_value","push","sortAmountList","coin","createSubSet","select","range","ideal","checked_add","maximum","improve","change","checked_sub","minAmount","maxFee","compare","minAda","input","outputAmount","minUTxOValue","randomSelect","cloneUTxOList","cloneValue","cloneUTxOSelection","e","message","sort","a","b","Number","searchAmountValue","isQtyFulfilled","utxo","splice","pop","descSelect","nbFreeUTxO","Math","floor","random","newAmount","abs","getAmountValue","compiledAmounts","amountList","sortOrder","sortInt","val","to_str","needle","haystack","undefined","cumulatedAmount","utxoList","big","group","candidate","gQty","cQty","cScriptHash","cAssetName","CONTRACT","scripts","add","CONTRACT_ADDRESS","START_BID","DATUM_TYPE","StartBid","BID","fieldsInner","Bid","OFFER","Offer","BUY","index","redeemerData","SELL","BID_HIGHER","CANCEL","SpaceBudzMarket","extraFeeRecipient","base","projectId","provider","blockfrostRequest","endpoint","headers","body","fetch","project_id","method","then","res","json","getUtxo","prefix","to_bech32","utxos","console","log","JSON","stringify","Promise","all","tx_hash","metadata","m","label","json_metadata","output_index","tradeOwnerAddress","address","data_hash","initTx","txBuilder","linearFee","minUtxo","poolDeposit","keyDeposit","maxValSize","priceMem","priceStep","from","datums","policyBidLength","contractInfo","policyBid","policyBidRemaining","multiAssets","assetNames","k","policyAsset","name","valueToAssets","prefixSpaceBudBid","startsWith","createOutput","v","set_coin","set_data_hash","to_address","setCollateral","add_address_witness","set_collateral","finalizeTx","changeAddress","scriptUtxo","action","transactionWitnessSet","add_input","add_output","redeemers","redeemerIndex","index_of_input","set_redeemers","set_plutus_data","set_plutus_scripts","cardano","selectedWallet","experimental","getCollateral","collateral","aux_data","generalMetadata","Object","set_metadata","set_auxiliary_data","changeMultiAssets","partialChange","partialMultiAssets","policies","checkMultiAssets","checkValue","makeSplit","add_change_if_needed","txBody","build","tx","size","signTx","txVkeyWitnesses","set_vkeys","vkeys","signedTx","auxiliary_data","submitTx","txHash","splitAmount","lovelaceAmount","owner1","fee2","owner2","fee","extraFee","amount1","amount2","amount3","fee1","min_fee_a","min_fee_b","pool_deposit","key_deposit","parseInt","max_val_size","max_tx_size","parseFloat","price_mem","price_step","policySpaceBudz","prefixSpaceBud","minPrice","bidStep","getOffer","padStart","offerUtxo","getAddress","getUsedAddresses","from_bytes","from_address","getBid","budString","bidUtxo","bid","bidAmount","walletAddress","getUtxos","bidDatum","payment_cred","to_keyhash","datumType","tag","as_i32","requiredSigners","set_required_signers","sell","offer","offerDatum","buy","cancelOffer","cancelBid","awaitConfirmation","rej","confirmation","setInterval","isConfirmed","error","clearInterval","props","spacebud","toast","useBreakpoint","useToast","React","owner","setOwner","useDisclosure","isOpen","onOpen","onClose","tradeRef","vrSrcRef","isLoadingMarket","setIsLoadingMarket","isLoadingVR","setIsLoadingVR","usd","lastSale","details","setDetails","loadingButton","setLoadingButton","connected","useStoreState","state","connection","market","connectedAddresses","isOwner","current","some","addr","firstUpdate","init","loadMarket","loadSpaceBudData","checkTransaction","type","PendingTransactionToast","Authorization","id","catch","closeAll","SuccessTransactionToast","setTimeout","Market","sid","token","addresses","fiatPrice","script","document","createElement","src","process","async","appendChild","bud","ref","onConfirm","className","world_type","terrain_trait","alt","replace","height","width","style","border","srcSet","image","onClick","bgcolor","rounded","colorScheme","maxWidth","UnitDisplay","showQuantity","Boolean","fontSize","color","symbol","decimals","isDisabled","isLoading","l","tradeErrorHandler","bgColor","icon","variant","openModal","isAttached","href","display","backgroundColor","terrain_color","title","year_length","day_length","gadgets","item","key","underline","navigate","xlinkHref","role","target","checked","required","placeholder","xmlns","viewBox"],"sourceRoot":""}